[{"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\reportWebVitals.js":"3","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\ExplorePage\\Explore.js":"4","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\cards\\cards.js":"5","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\populatecard\\populateCard.js":"6","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Navbar\\navbar.js":"7","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Navbar\\Navbar.js":"8","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Popular\\Popular.js":"9","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\MyCollection\\Collection.js":"10","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Sale\\Sale.js":"11","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Creators\\Creators.js":"12","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\ErrorPage\\Error.js":"13","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\CreatePage\\Create.js":"14","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\DetailsPage\\Details.js":"15","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\FrontPage\\WalletConnect.js":"16","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\index.js":"17","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\App.js":"18","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\reportWebVitals.js":"19","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\ExplorePage\\Explore.js":"20","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\MyCollection\\Collection.js":"21","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Navbar\\Navbar.js":"22","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Popular\\Popular.js":"23","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Sale\\Sale.js":"24","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Creators\\Creators.js":"25","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\ErrorPage\\Error.js":"26","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\CreatePage\\Create.js":"27","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\DetailsPage\\Details.js":"28","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\index.js":"29","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\reportWebVitals.js":"30","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\App.js":"31","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Popular\\Popular.js":"32","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\MyCollection\\Collection.js":"33","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\ExplorePage\\Explore.js":"34","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Navbar\\Navbar.js":"35","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Sale\\Sale.js":"36","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Creators\\Creators.js":"37","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\CreatePage\\Create.js":"38","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\ErrorPage\\Error.js":"39","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\DetailsPage\\Details.js":"40","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\HIstorySection\\History.js":"41"},{"size":544,"mtime":1650108298099,"results":"42","hashOfConfig":"43"},{"size":1180,"mtime":1649741244948,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1633507319125,"results":"45","hashOfConfig":"43"},{"size":1273,"mtime":1651566763173,"results":"46","hashOfConfig":"43"},{"size":161,"mtime":1649913794408,"results":"47","hashOfConfig":"43"},{"size":319,"mtime":1649143989127,"results":"48","hashOfConfig":"43"},{"size":125,"mtime":1649151795149,"results":"49","hashOfConfig":"43"},{"size":2407,"mtime":1650109794369,"results":"50","hashOfConfig":"43"},{"size":122,"mtime":1649224618308,"results":"51","hashOfConfig":"43"},{"size":131,"mtime":1649224643764,"results":"52","hashOfConfig":"43"},{"size":113,"mtime":1649224576475,"results":"53","hashOfConfig":"43"},{"size":125,"mtime":1649224679588,"results":"54","hashOfConfig":"43"},{"size":121,"mtime":1649225149544,"results":"55","hashOfConfig":"43"},{"size":4289,"mtime":1651236813264,"results":"56","hashOfConfig":"43"},{"size":4196,"mtime":1651482858233,"results":"57","hashOfConfig":"43"},{"size":956,"mtime":1650109253577,"results":"58","hashOfConfig":"43"},{"size":562,"mtime":1651855035175,"results":"59","hashOfConfig":"60"},{"size":1216,"mtime":1651855035021,"results":"61","hashOfConfig":"60"},{"size":375,"mtime":1651855035177,"results":"62","hashOfConfig":"60"},{"size":1467,"mtime":1651855795596,"results":"63","hashOfConfig":"60"},{"size":131,"mtime":1651855035165,"results":"64","hashOfConfig":"60"},{"size":2407,"mtime":1651855035166,"results":"65","hashOfConfig":"60"},{"size":122,"mtime":1651855035168,"results":"66","hashOfConfig":"60"},{"size":113,"mtime":1651855035170,"results":"67","hashOfConfig":"60"},{"size":125,"mtime":1651855035152,"results":"68","hashOfConfig":"60"},{"size":121,"mtime":1651855035156,"results":"69","hashOfConfig":"60"},{"size":4289,"mtime":1651855035150,"results":"70","hashOfConfig":"60"},{"size":4369,"mtime":1651856573726,"results":"71","hashOfConfig":"60"},{"size":562,"mtime":1651855035175,"results":"72","hashOfConfig":"73"},{"size":375,"mtime":1651855035177,"results":"74","hashOfConfig":"73"},{"size":1225,"mtime":1652161020829,"results":"75","hashOfConfig":"73"},{"size":122,"mtime":1651855035168,"results":"76","hashOfConfig":"73"},{"size":2418,"mtime":1652197237967,"results":"77","hashOfConfig":"73"},{"size":2436,"mtime":1652283866898,"results":"78","hashOfConfig":"73"},{"size":3297,"mtime":1652253329304,"results":"79","hashOfConfig":"73"},{"size":113,"mtime":1651855035170,"results":"80","hashOfConfig":"73"},{"size":125,"mtime":1651855035152,"results":"81","hashOfConfig":"73"},{"size":4203,"mtime":1652176747832,"results":"82","hashOfConfig":"73"},{"size":121,"mtime":1651855035156,"results":"83","hashOfConfig":"73"},{"size":6903,"mtime":1652270742616,"results":"84","hashOfConfig":"73"},{"size":1993,"mtime":1652333480382,"results":"85","hashOfConfig":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ec67yj",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xd8hmr",{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"zp42cb",{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"151"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"151"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"151"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"151"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\index.js",[],["181","182"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\ExplorePage\\Explore.js",["183","184","185","186"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\cards\\cards.js",["187"],"import React from \"react\";\r\nimport \"./cards.css\";\r\nconst cards = () => {\r\n  return (\r\n    <>\r\n     \r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default cards;\r\n",["188","189"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\populatecard\\populateCard.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Navbar\\navbar.js",[],["190","191"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Navbar\\Navbar.js",["192","193","194"],"import {React, useEffect, useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n\r\n\r\n  const isWalletConnected = () => {\r\n    if (!window.ethereum) {\r\n      return;\r\n    }\r\n    let address = window.ethereum.selectedAddress;\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n  };\r\n  const connectWalletHandler = async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!ethereum) {\r\n      alert(\"Install metamask\");\r\n    }\r\n    try {\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setWalletAddress(accounts[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(async ()=>{\r\n\r\n\r\n    if (!window.ethereum) {\r\n\r\n      connectWalletHandler()      // window.ethereum.on(\"accountsChanged\", accountsChanged);\r\n     }\r\n     else{\r\n    \r\n     }\r\n     \r\n\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n     <div className=\"navbar\">\r\n       <h2>NFT Marketplace</h2>\r\n     <nav>\r\n          <ul className=\"items\">\r\n            <li>\r\n              <NavLink to=\"/\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Explore{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/popular\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Popular{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/sale\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Sale{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/collection\" activeClassName=\"active\">\r\n                {\" \"}\r\n                My Collection{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/creators\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Creators{\" \"}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n      </nav>\r\n\r\n          <div className=\"buttons\">\r\n          <NavLink to=\"/create\">\r\n              <button><span>Create</span></button>\r\n            </NavLink>\r\n          <button>200 Tokens</button>\r\n          </div>\r\n     </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Popular\\Popular.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\MyCollection\\Collection.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Sale\\Sale.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\Creators\\Creators.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\ErrorPage\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\CreatePage\\Create.js",["195","196","197","198","199","200","201","202","203"],"import { React, useEffect, useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport \"./create.css\";\r\n\r\nconst Create = () => {\r\n  const maxSize = 12000000;\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [path, setPath] = useState(\"\");\r\n  const [mintMessage, setMintMessage] = useState(\"\");\r\n  const [mintMessageState, setMintMessageState] = useState(\"success\");\r\n\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [mintTitle, setTitle] = useState(\"\");\r\n  const [mintPrice, setPrice] = useState(0);\r\n  const [dexcription, setDexcription] = useState(\"\");\r\n\r\n  const onDrop = (acceptedFile) => {\r\n    if (acceptedFile.length == 0) {\r\n      alert(\"File size must be less than 12mb\");\r\n    } else {\r\n      setSelectedFile(acceptedFile);\r\n      setPath((acceptedFile[0].path).toString());\r\n      console.log(path);\r\n    }\r\n  };\r\n\r\n\r\n  const mintNFT = async (e) => {\r\n    e.preventDefault();\r\n    const { ethereum } = window;\r\n    const accounts = await ethereum.request({\r\n      method: \"eth_requestAccounts\",\r\n    });\r\n    setWalletAddress(accounts[0]);\r\n    console.log(walletAddress); \r\n    if (\r\n      mintTitle == \"\" ||\r\n      mintPrice == 0 ||\r\n      mintPrice == \"\" ||\r\n      dexcription == \"\" || \r\n      selectedFile.length === 0\r\n    ) {\r\n      setMintMessage(\r\n        \"One of the required fields were left empty. Please try again\"\r\n      );\r\n      setMintMessageState(\"error\");\r\n      return;\r\n    }\r\n\r\n    // const formData = {\r\n    //   msgsender: walletAddress,\r\n    //   title: mintTitle,\r\n    //   price: mintPrice,\r\n    //   category: mintCategory,\r\n    //   description: dexcription,\r\n    // }\r\n    const formData = new FormData();\r\n    formData.append(\"msgsender\", walletAddress);\r\n    formData.append(\"title\", mintTitle);\r\n    formData.append(\"price\", mintPrice);\r\n    formData.append(\"description\", dexcription);\r\n    formData.append(\"media\", selectedFile[0]);\r\n\r\n    setMintMessage(\"Uploading your video NFT on IPFS\");\r\n    setMintMessageState(\"info\");\r\n    console.log(formData);\r\n\r\n    const response = await axios.post(\r\n      `http://localhost:3000/mintNFT`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status == 200) {\r\n      setMintMessage(\"Sending transaction\");\r\n      setMintMessageState(\"info\");\r\n      var params = [\r\n        {\r\n          from: walletAddress,\r\n          ...response.data.signRequired,\r\n        },\r\n      ];\r\n      const signed = await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params,\r\n      });\r\n      setMintMessage(\r\n        \"Transaction successfully sent, <a href='https://ropsten.etherscan.io/tx/\" +\r\n          signed +\r\n          \"' target='_blank'>view on etherescan</a>\"\r\n      );\r\n      setMintMessageState(\"success\");\r\n    } else {\r\n      setMintMessage(response.data.error);\r\n      setMintMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"background\">\r\n      <h1>Create an NFT</h1>\r\n      <form>\r\n        <Dropzone\r\n          multiple={false}\r\n          onDrop={onDrop}\r\n          accept=\"video/*\"\r\n          maxSize={maxSize}\r\n        >\r\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\r\n            return (\r\n              <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {!isDragActive && \"Click here or drop a file to upload!\"}\r\n                {isDragActive && !isDragReject && \"Drop it!\"}\r\n                {isDragReject && \"File type not accepted, sorry!\"}\r\n              </div>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n\r\n        <p>{path}</p>\r\n        <input type={Text} placeholder=\"Title\" onChange={(e)=>{setTitle(e.target.value)}}/>\r\n        <input type={Text} placeholder=\"Price\" onChange={(e)=>{setPrice(e.target.value)}} />\r\n        <textarea placeholder=\"Description\" onChange={(e)=>{setDexcription(e.target.value)}}></textarea>\r\n        <button className=\"mintBtn\" onClick={mintNFT}>Mint</button>\r\n      </form>\r\n\r\n      <a>{mintMessage}</a>\r\n      {/* <p>{mintMessageState}</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\DetailsPage\\Details.js",["204","205"],"import React from \"react\";\r\nimport \"./details.css\";\r\nimport video from \"../.././Assets/sample.mp4\";\r\nimport axios from \"axios\";\r\n\r\nconst Details = () => {\r\n\r\n\r\n  // useEffect(async()=>{\r\n\r\n  //   const uri = await axios.get(\r\n  //      `http://localhost:3000/mintNFT/getTokenURI`,\r\n  //     {\r\n  //         params: { tokenId: id },\r\n  //     }\r\n  // );\r\n\r\n  // })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"vidSection\">\r\n        <video className=\"video\" src={video} autoPlay muted loop />\r\n      </div>\r\n\r\n      <div className=\"nameNdPrice\">\r\n        <div className=\"name\">\r\n          <img src=\"https://picsum.photos/50/50\" />\r\n          <h2>Tenz</h2>\r\n        </div>\r\n\r\n        <div className=\"price\">\r\n          <h3>Price:</h3>\r\n          <p>\r\n            20{\" \"}\r\n            <span style={{ color: \"orangered\", marginRight: \"15px\" }}>\r\n              Tokens\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"detailNdButton\">\r\n        <div className=\"details\">\r\n          <h1>Getting An ACE:</h1>\r\n          <p>\r\n            {\" \"}\r\n            lorem ipsum dolor sit amet, lorem ipsum dolor sit amet, lorem ipsum\r\n            dolor sit amet, lorem ipsum dolor sit amet, lorem ipsum dolor sit\r\n            amet, lorem ipsum dolor sit amet, lorem ipsum dolor sit amet, lorem\r\n            ipsum dolor sit amet, lorem ipsum dolor sit amet,\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"button\">\r\n          <button>Make Offer</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <h2>Item History</h2>\r\n      </div>\r\n\r\n      <div className=\"historySection\">\r\n        <table>\r\n          <thead className=\"tHeader\">\r\n            <tr>\r\n              <td className=\"tableCell\">Event</td>\r\n              <td className=\"tableCell\">FROM</td>\r\n              <td className=\"tableCell\">TO</td>\r\n              <td className=\"tableCell\">PRICE</td>\r\n              <td className=\"tableCell\">DATE</td>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n          <tr>\r\n              <td className=\"tableCell\">Event</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">20 TOKENS</td>\r\n              <td className=\"tableCell\">DATE</td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td className=\"tableCell\">Event</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">20 TOKENS</td>\r\n              <td className=\"tableCell\">DATE</td>\r\n            </tr>\r\n\r\n\r\n            <tr>\r\n              <td className=\"tableCell\">Event</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">20 TOKENS</td>\r\n              <td className=\"tableCell\">DATE</td>\r\n            </tr>\r\n            \r\n            <tr>\r\n              <td className=\"tableCell\">Event</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</td>\r\n              <td className=\"tableCell\">20 TOKENS</td>\r\n              <td className=\"tableCell\">DATE</td>\r\n            </tr>\r\n            \r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* <div className=\"historySection\">\r\n\r\n        <div className=\"headings\">\r\n          <h4>EVENT</h4>\r\n          <h4 >FROM</h4>\r\n          <h4>TO</h4>\r\n          <h4>PRICE</h4>\r\n          <h4>DATE</h4>\r\n        </div>\r\n\r\n        <div className=\"transactions\">\r\n          <h5>EVENT</h5>\r\n          <h5>0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</h5>\r\n          <h5>0xbD9D4a71B76C494958d9D258A1e3d4c0801495e0</h5>\r\n          <h5>20 Token</h5>\r\n          <h5>DATE</h5>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project101\\front\\src\\Components\\FrontPage\\WalletConnect.js",["206","207"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\ExplorePage\\Explore.js",["208","209"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\MyCollection\\Collection.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Navbar\\Navbar.js",["210","211","212"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Popular\\Popular.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Sale\\Sale.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\Creators\\Creators.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\ErrorPage\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\CreatePage\\Create.js",["213","214","215","216","217","218","219","220","221"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NFTMarketplace\\front\\src\\Components\\DetailsPage\\Details.js",["222","223"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\index.js",[],["224","225"],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Popular\\Popular.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\MyCollection\\Collection.js",["226","227","228"],"import { React, useEffect } from \"react\";\r\nimport \"./collection.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Collection = () => {\r\n  var tokens = [];\r\n\r\n  const [nfts, setNfts] = useState([]);\r\n\r\n  useEffect(async () => {\r\n\r\n    let address = await window.ethereum.selectedAddress;\r\n\r\n    console.log(address);\r\n    const response = await axios.get(`http://localhost:8080/getCollections`, {\r\n      params:{address: address}\r\n    });\r\n\r\n\r\n    for (var i = 0; i < response.data.result.length; i++) {\r\n      try {\r\n        const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\r\n          params: { tokenId: response.data.result[i] },\r\n        });\r\n        const uriResponse = await axios.get(uri.data.result);\r\n        const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n          params: { tokenId: response.data.result[i] },\r\n        });\r\n\r\n        tokens.push({\r\n          ...uriResponse.data,\r\n          tokenId: response.data.result[i],\r\n          price: price.data.result,\r\n        });\r\n\r\n      } catch (err) {}\r\n    }\r\n\r\n    setNfts(tokens);\r\n   \r\n    \r\n  },[]);\r\n\r\n  console.log(\"My NFTs\",nfts);\r\n  return (\r\n    <>\r\n      <ul\r\n        style={{\r\n          paddingLeft: \"120px\",\r\n          marginTop: \"50px\",\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <li>\r\n          <h1>Collections</h1>\r\n        </li>\r\n      </ul>\r\n\r\n      <div id=\"containerStyle\">\r\n        {nfts.map((value,index) => {\r\n          return (\r\n            <div className=\"card\" key={index}>\r\n              <Link to={`/details/${value.tokenId}`}>\r\n                <video\r\n                  src={value.media}\r\n                  className=\"vid\"\r\n                  style={{ width: \"268px\" }}\r\n                />\r\n\r\n                <div className=\"cardDetails\">\r\n                  <img src=\"https://picsum.photos/50/50\" />\r\n                  <h4>Tenz</h4>\r\n                  <p>\r\n                    Price:{\" \"}\r\n                    <span style={{ color: \"orangered\", fontWeight: \"bold\" }}>\r\n                      {value.price/Math.pow(10,18)} Tokens\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n\r\n                <h2> {value.title}</h2>\r\n\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\ExplorePage\\Explore.js",["229","230","231"],"import { React, useEffect } from \"react\";\r\nimport \"./explore.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Explore = () => {\r\n  var tokens = [];\r\n\r\n  const [nfts, setNfts] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const response = await axios.get(`http://localhost:8080/getTokens`, {});\r\n\r\n    response.data.result.reverse();\r\n\r\n    for (var i = 0; i < response.data.result.length; i++) {\r\n      try {\r\n        const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\r\n          params: { tokenId: response.data.result[i] },\r\n        });\r\n        const uriResponse = await axios.get(uri.data.result);\r\n        const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n          params: { tokenId: response.data.result[i] },\r\n        });\r\n\r\n        tokens.push({\r\n          ...uriResponse.data,\r\n          tokenId: response.data.result[i],\r\n          price: price.data.result,\r\n        });\r\n\r\n      } catch (err) {}\r\n    }\r\n\r\n    setNfts(tokens);\r\n   \r\n    \r\n  },[]);\r\n\r\n  console.log(\"My NFTs\",nfts);\r\n  return (\r\n    <>\r\n      <ul\r\n        style={{\r\n          paddingLeft: \"120px\",\r\n          marginTop: \"50px\",\r\n          textDecoration: \"none\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <li>\r\n          <h1>Explore</h1>\r\n        </li>\r\n      </ul>\r\n\r\n\r\n      \r\n      <div id=\"containerStyle\">\r\n        {nfts.map((value,index) => {\r\n          return (\r\n            <div className=\"card\" key={index}>\r\n              <Link to={`/details/${value.tokenId}`}>\r\n               <div className=\"upperSection\">\r\n                <video\r\n                  src={value.media}\r\n                  preload=\"auto|metadata|none\"\r\n                  className=\"vid\"\r\n                  style={{ width: \"268px\" }}\r\n                />\r\n               </div>\r\n                <div className=\"lowerSection\">\r\n                  <img src=\"https://picsum.photos/50/50\" />\r\n                  <h4>Tenz</h4>\r\n                  <p>\r\n                    Price:{\" \"}\r\n                    <span style={{ color: \"orangered\", fontWeight: \"bold\" }}>\r\n                      {value.price/Math.pow(10,18)} Tokens\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n\r\n                <h2> {value.title}</h2>\r\n\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Explore;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Navbar\\Navbar.js",["232"],"import { React, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n\r\n  window.ethereum.on(\"accountsChanged\", () => {\r\n    isWalletConnected();\r\n  });\r\n\r\n  const isWalletConnected = async () => {\r\n\r\n    let address = window.ethereum.selectedAddress;\r\n    localStorage.setItem(\"walletAddress\", address);\r\n\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n  };\r\n\r\n  const connectWalletHandler = async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!ethereum) {\r\n      alert(\"Install metamask\");\r\n    }\r\n    try {\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setWalletAddress(accounts[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const {ethereum} = window;\r\n    if (!ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n\r\n    const address = await window.ethereum.request({ method: 'eth_accounts' });\r\n     setWalletAddress(address[0]);\r\n\r\n\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n\r\n    \r\n\r\n    if (walletAddress) {\r\n      const response = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\r\n        params: { address: walletAddress },\r\n      });\r\n  \r\n      const balance = response.data.result /Math.pow(10, 18);\r\n      setWalletBalance(balance);\r\n    }\r\n   \r\n  }, [walletAddress]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <p className=\"heading\">NFT Marketplace</p>\r\n        <nav>\r\n          <ul className=\"items\">\r\n            <li>\r\n              <NavLink to=\"/\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Explore{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/popular\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Popular{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/sale\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Sale{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/collection\" activeClassName=\"active\">\r\n                {\" \"}\r\n                My Collection{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/creators\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Creators{\" \"}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <div className=\"buttons\">\r\n          {walletAddress ? (\r\n            <>\r\n              {\" \"}\r\n              <NavLink to=\"/create\">\r\n                <button>\r\n                  <span>Create</span>\r\n                </button>\r\n              </NavLink>\r\n              <button>\r\n                {walletBalance}{\" \"}\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button type=\"button\" onClick={connectWalletHandler}>\r\n              <p>Connect Wallet</p>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Sale\\Sale.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\Creators\\Creators.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\CreatePage\\Create.js",["233","234","235","236","237","238","239","240","241","242"],"import { React, useEffect, useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport \"./create.css\";\r\n\r\nconst Create = () => {\r\n  const maxSize = 2097152;\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [path, setPath] = useState(\"\");\r\n  const [mintMessage, setMintMessage] = useState(\"\");\r\n  const [mintMessageState, setMintMessageState] = useState(\"success\");\r\n\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [mintTitle, setTitle] = useState(\"\");\r\n  const [mintPrice, setPrice] = useState(0);\r\n  const [dexcription, setDexcription] = useState(\"\");\r\n\r\n  const onDrop = (acceptedFile) => {\r\n    if (acceptedFile.length == 0) {\r\n      alert(\"File size must be less than 2mb\");\r\n    } else {\r\n      setSelectedFile(acceptedFile);\r\n      setPath((acceptedFile[0].path).toString());\r\n      console.log(path);\r\n    }\r\n  };\r\n\r\n  useEffect(async ()=>{\r\n    if (!window.ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n    let address = await window.ethereum.selectedAddress;\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n  })\r\n\r\n  const mintNFT = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      mintTitle == \"\" ||\r\n      mintPrice == 0 ||\r\n      mintPrice == \"\" ||\r\n      dexcription == \"\" || \r\n      selectedFile.length === 0\r\n    ) {\r\n      setMintMessage(\r\n        \"One of the required fields were left empty. Please try again\"\r\n      );\r\n      setMintMessageState(\"error\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"msgsender\", walletAddress);\r\n    formData.append(\"title\", mintTitle);\r\n    formData.append(\"price\", mintPrice);\r\n    formData.append(\"description\", dexcription);\r\n    formData.append(\"media\", selectedFile[0]);\r\n\r\n    setMintMessage(\"Uploading your video NFT on IPFS\");\r\n    setMintMessageState(\"info\");\r\n    console.log(formData);\r\n\r\n    const response = await axios.post(\r\n      `http://localhost:8080/mintNFT`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status == 200) {\r\n      setMintMessage(\"Sending transaction\");\r\n      setMintMessageState(\"info\");\r\n      var params = [\r\n        {\r\n          from: walletAddress,\r\n          ...response.data.signRequired,\r\n        },\r\n      ];\r\n      const signed = await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params,\r\n      });\r\n      setMintMessage(\r\n        \"Transaction successfully sent, <a href='https://testnet.bscscan.com/tx/\" +\r\n          signed +\r\n          \"' target='_blank'>view on etherescan</a>\"\r\n      );\r\n      setMintMessageState(\"success\");\r\n    } else {\r\n      setMintMessage(response.data.error);\r\n      setMintMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"background\">\r\n      <h1>Create an NFT</h1>\r\n      <form>\r\n        <Dropzone\r\n          multiple={false}\r\n          onDrop={onDrop}\r\n          accept=\"video/*\"\r\n          maxSize={maxSize}\r\n        >\r\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\r\n            return (\r\n              <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {!isDragActive && \"Click here or drop a file to upload!\"}\r\n                {isDragActive && !isDragReject && \"Drop it!\"}\r\n                {isDragReject && \"File type not accepted, sorry!\"}\r\n              </div>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n\r\n        <p>{path}</p>\r\n        <input type={Text} placeholder=\"Title\" onChange={(e)=>{setTitle(e.target.value)}}/>\r\n        <input type={Text} placeholder=\"Price\" onChange={(e)=>{setPrice(e.target.value)}} />\r\n        <textarea placeholder=\"Description\" onChange={(e)=>{setDexcription(e.target.value)}}></textarea>\r\n        <button className=\"mintBtn\" onClick={mintNFT}>Mint</button>\r\n      </form>\r\n\r\n      <a>{mintMessage}</a>\r\n      {/* <p>{mintMessageState}</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\ErrorPage\\Error.js",[],"C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\DetailsPage\\Details.js",["243","244","245","246","247","248","249","250","251","252","253","254","255"],"import { useState, useEffect, React } from \"react\";\r\nimport \"./details.css\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport History from \"../HIstorySection/History\";\r\nimport { ownerDocument } from \"@material-ui/core\";\r\n\r\nconst Details = () => {\r\n  let { tokenId } = useParams();\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [tokenData, setTokenData] = useState({});\r\n  const [showPlaceBid, setShowPlaceBid] = useState(false);\r\n  const [showPriceUpdate, setShowPriceUpdate] = useState(false);\r\n  const [showStartAuction, setShowStartAuction] = useState(false);\r\n\r\n  const buyNFT = async () => {\r\n    let address = await window.ethereum.selectedAddress;\r\n    const balance = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\r\n      params: { address: address },\r\n    });\r\n\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    if (balance >= price) {\r\n      const response = await axios.post(`http://localhost:8080/buyNFT`, {\r\n        msgsender: walletAddress,\r\n        price: tokenData.price,\r\n        tokenId: tokenId,\r\n      });\r\n\r\n      const tx = response.data.signRequired;\r\n\r\n      if (response.status == 200) {\r\n        for (let txObj of tx) {\r\n          var params = [txObj];\r\n\r\n          const txHash = await window.ethereum.request({\r\n            method: \"eth_sendTransaction\",\r\n            params,\r\n          });\r\n\r\n          let txReceipt = null;\r\n          while(txReceipt == null)\r\n          {\r\n              txReceipt = await window.ethereum.request({\r\n              method: \"eth_getTransactionReceipt\",\r\n              params:[txHash],\r\n            });\r\n          }\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n        // setTokenActionMessage(\r\n        //   \"Congratulations! Your NFT is on its way to you.\"\r\n        // );\r\n      } else {\r\n        // setTokenActionMessage(\r\n        //   \"An error occured while crafting transactions, try refreshing the page.\"\r\n        // );\r\n        alert(\"hello error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopBid = async () => {\r\n    const response = await axios.post(`http://localhost:8080/stopAuction`, {\r\n      msgsender: walletAddress,\r\n      tokenId: tokenId,\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      for (var i = 0; i < response.data.signRequired.length; i++) {\r\n        // setTokenActionMessage(\r\n        //     \"Sending transaction#\" + (i + 1) + \" to the network...\"\r\n        // );\r\n        var params = [\r\n          {\r\n            ...response.data.signRequired[i],\r\n          },\r\n        ];\r\n        await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params,\r\n        });\r\n      }\r\n      // setTokenActionMessage(\r\n      //     \"Auction stop request sent to network, please wait for transaction to be mined.\"\r\n      // );\r\n    } else {\r\n      // setTokenActionMessage(\r\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  let buttonHandler = () => {\r\n    if (tokenData.owner != walletAddress) {\r\n      if (tokenData.tknBid) {\r\n        setShowPlaceBid(true);\r\n      } else {\r\n        buyNFT();\r\n      }\r\n    } else {\r\n      if (tokenData.tknBid) {\r\n        stopBid();\r\n      } else {\r\n        setShowPriceUpdate(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!window.ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n\r\n    const address = await window.ethereum.request({ method: \"eth_accounts\" });\r\n\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address[0]);\r\n\r\n    const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    console.log(uri.data.result);\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n\r\n    const owner = await axios.get(`http://localhost:8080/ownerOf`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    \r\n\r\n    const uriResponse = await axios.get(uri.data.result);\r\n\r\n    // const history = await axios.get(`http://localhost:8080/getNftHistory`, {\r\n    //   params: { tokenId: tokenId },\r\n    // });\r\n\r\n    var auctioned = null;\r\n    try {\r\n      auctioned = await axios.get(`http://localhost:8080/auctionInfo`, {\r\n        params: { tokenId: tokenId },\r\n      });\r\n    } catch (err) {}\r\n\r\n    if (auctioned) {\r\n      setTokenData({\r\n        ...auctioned.data.result,\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.result.toLowerCase()\r\n      });\r\n    } else {\r\n      setTokenData({\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.toLowerCase()\r\n      });\r\n    }\r\n  }, [walletAddress]);\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"vidSection\">\r\n        <video className=\"video\" src={tokenData.media} autoPlay muted loop />\r\n      </div>\r\n\r\n      <div className=\"nameNdPrice\">\r\n        <div className=\"name\">\r\n          <img src=\"https://picsum.photos/50/50\" />\r\n          <h2>Tenz</h2>\r\n        </div>\r\n\r\n        <div className=\"price\">\r\n          <h3>{tokenData.tknBid ? \"Current Bid:\" : \"Current Price:\"}</h3>\r\n          <p>\r\n            {tokenData.tknBid\r\n              ? tokenData.tknBid / Math.pow(10, 18)\r\n              : tokenData.price / Math.pow(10, 18)}\r\n\r\n            <span style={{ color: \"orangered\", marginRight: \"15px\" }}>\r\n              Tokens\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"detailNdButton\">\r\n        <div className=\"details\">\r\n          <h1>{tokenData.title}:</h1>\r\n          <p> {tokenData.description}</p>\r\n        </div>\r\n\r\n        <div className=\"button\">\r\n          {/* <button onClick={() => buttonHandler()}>\r\n            {tokenData.creator != walletAddress\r\n              ? tokenData.tknBid\r\n                ? \"Place Bid\"\r\n                : \"Buy\"\r\n              : tokenData.tknBid && \"Stop & Transfer\"}\r\n          </button> */}\r\n          {tokenData.owner != walletAddress ? (\r\n            tokenData.tknBid ? (\r\n              <button>Place Bid</button>\r\n            ) : (\r\n              <button onClick={buyNFT}>Buy</button>\r\n            )\r\n          ) : (\r\n            tokenData.tknBid && <button>Stop & Transfer</button>\r\n          )}\r\n\r\n          {\r\n          tokenData.owner == walletAddress && !tokenData.tknBid ? (\r\n            <>\r\n            <button onClick={() => setShowStartAuction(true)}>\r\n              Put on Auction\r\n            </button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <h2>Buying History:</h2>\r\n      </div>\r\n\r\n\r\n            <History/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\Lenovo\\Desktop\\FYP Documentation\\Project201\\FYP_NftMarketplace\\front\\src\\Components\\HIstorySection\\History.js",["256","257","258"],{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":4,"column":10,"nodeType":"265","messageId":"266","endLine":4,"endColumn":14},{"ruleId":"263","severity":1,"message":"267","line":5,"column":10,"nodeType":"265","messageId":"266","endLine":5,"endColumn":14},{"ruleId":"263","severity":1,"message":"268","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":20},{"ruleId":"269","severity":1,"message":"270","line":27,"column":16,"nodeType":"271","endLine":27,"endColumn":57},{"ruleId":null,"fatal":true,"severity":2,"message":"272","line":8,"column":7},{"ruleId":"259","replacedBy":"273"},{"ruleId":"261","replacedBy":"274"},{"ruleId":"259","replacedBy":"275"},{"ruleId":"261","replacedBy":"276"},{"ruleId":"263","severity":1,"message":"277","line":7,"column":10,"nodeType":"265","messageId":"266","endLine":7,"endColumn":23},{"ruleId":"263","severity":1,"message":"278","line":10,"column":9,"nodeType":"265","messageId":"266","endLine":10,"endColumn":26},{"ruleId":"279","severity":1,"message":"280","line":37,"column":13,"nodeType":"281","endLine":49,"endColumn":4},{"ruleId":"263","severity":1,"message":"282","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":26},{"ruleId":"263","severity":1,"message":"283","line":11,"column":10,"nodeType":"265","messageId":"266","endLine":11,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":19,"column":29,"nodeType":"286","messageId":"287","endLine":19,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":38,"column":17,"nodeType":"286","messageId":"287","endLine":38,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":39,"column":17,"nodeType":"286","messageId":"287","endLine":39,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":40,"column":17,"nodeType":"286","messageId":"287","endLine":40,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":41,"column":19,"nodeType":"286","messageId":"287","endLine":41,"endColumn":21},{"ruleId":"284","severity":1,"message":"285","line":78,"column":25,"nodeType":"286","messageId":"287","endLine":78,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":133,"column":7,"nodeType":"271","endLine":133,"endColumn":10},{"ruleId":"263","severity":1,"message":"290","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":31,"column":11,"nodeType":"271","endLine":31,"endColumn":52},{"ruleId":"263","severity":1,"message":"291","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":18},{"ruleId":"263","severity":1,"message":"292","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":23},{"ruleId":"263","severity":1,"message":"293","line":4,"column":10,"nodeType":"265","messageId":"266","endLine":4,"endColumn":18},{"ruleId":"269","severity":1,"message":"270","line":36,"column":16,"nodeType":"271","endLine":36,"endColumn":57},{"ruleId":"263","severity":1,"message":"277","line":7,"column":10,"nodeType":"265","messageId":"266","endLine":7,"endColumn":23},{"ruleId":"263","severity":1,"message":"278","line":10,"column":9,"nodeType":"265","messageId":"266","endLine":10,"endColumn":26},{"ruleId":"279","severity":1,"message":"280","line":37,"column":13,"nodeType":"281","endLine":49,"endColumn":4},{"ruleId":"263","severity":1,"message":"282","line":1,"column":17,"nodeType":"265","messageId":"266","endLine":1,"endColumn":26},{"ruleId":"263","severity":1,"message":"283","line":11,"column":10,"nodeType":"265","messageId":"266","endLine":11,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":19,"column":29,"nodeType":"286","messageId":"287","endLine":19,"endColumn":31},{"ruleId":"284","severity":1,"message":"285","line":38,"column":17,"nodeType":"286","messageId":"287","endLine":38,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":39,"column":17,"nodeType":"286","messageId":"287","endLine":39,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":40,"column":17,"nodeType":"286","messageId":"287","endLine":40,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":41,"column":19,"nodeType":"286","messageId":"287","endLine":41,"endColumn":21},{"ruleId":"284","severity":1,"message":"285","line":78,"column":25,"nodeType":"286","messageId":"287","endLine":78,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":133,"column":7,"nodeType":"271","endLine":133,"endColumn":10},{"ruleId":"263","severity":1,"message":"290","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":13},{"ruleId":"269","severity":1,"message":"270","line":36,"column":11,"nodeType":"271","endLine":36,"endColumn":52},{"ruleId":"259","replacedBy":"294"},{"ruleId":"261","replacedBy":"295"},{"ruleId":"279","severity":1,"message":"280","line":12,"column":13,"nodeType":"281","endLine":44,"endColumn":4},{"ruleId":"279","severity":1,"message":"296","line":44,"column":5,"nodeType":"297","endLine":44,"endColumn":7,"suggestions":"298"},{"ruleId":"269","severity":1,"message":"270","line":74,"column":19,"nodeType":"271","endLine":74,"endColumn":60},{"ruleId":"279","severity":1,"message":"280","line":12,"column":13,"nodeType":"281","endLine":39,"endColumn":4},{"ruleId":"279","severity":1,"message":"296","line":39,"column":5,"nodeType":"297","endLine":39,"endColumn":7,"suggestions":"299"},{"ruleId":"269","severity":1,"message":"270","line":73,"column":19,"nodeType":"271","endLine":73,"endColumn":60},{"ruleId":"279","severity":1,"message":"280","line":38,"column":13,"nodeType":"281","endLine":63,"endColumn":4},{"ruleId":"263","severity":1,"message":"283","line":11,"column":10,"nodeType":"265","messageId":"266","endLine":11,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":19,"column":29,"nodeType":"286","messageId":"287","endLine":19,"endColumn":31},{"ruleId":"279","severity":1,"message":"300","line":28,"column":3,"nodeType":"265","endLine":28,"endColumn":12,"suggestions":"301"},{"ruleId":"279","severity":1,"message":"280","line":28,"column":13,"nodeType":"281","endLine":37,"endColumn":4},{"ruleId":"284","severity":1,"message":"285","line":42,"column":17,"nodeType":"286","messageId":"287","endLine":42,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":43,"column":17,"nodeType":"286","messageId":"287","endLine":43,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":44,"column":17,"nodeType":"286","messageId":"287","endLine":44,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":45,"column":19,"nodeType":"286","messageId":"287","endLine":45,"endColumn":21},{"ruleId":"284","severity":1,"message":"285","line":75,"column":25,"nodeType":"286","messageId":"287","endLine":75,"endColumn":27},{"ruleId":"288","severity":1,"message":"289","line":130,"column":7,"nodeType":"271","endLine":130,"endColumn":10},{"ruleId":"263","severity":1,"message":"302","line":6,"column":10,"nodeType":"265","messageId":"266","endLine":6,"endColumn":23},{"ruleId":"263","severity":1,"message":"303","line":12,"column":10,"nodeType":"265","messageId":"266","endLine":12,"endColumn":22},{"ruleId":"263","severity":1,"message":"304","line":13,"column":10,"nodeType":"265","messageId":"266","endLine":13,"endColumn":25},{"ruleId":"263","severity":1,"message":"305","line":14,"column":10,"nodeType":"265","messageId":"266","endLine":14,"endColumn":26},{"ruleId":"284","severity":1,"message":"285","line":35,"column":27,"nodeType":"286","messageId":"287","endLine":35,"endColumn":29},{"ruleId":"284","severity":1,"message":"285","line":74,"column":25,"nodeType":"286","messageId":"287","endLine":74,"endColumn":27},{"ruleId":"263","severity":1,"message":"306","line":99,"column":7,"nodeType":"265","messageId":"266","endLine":99,"endColumn":20},{"ruleId":"284","severity":1,"message":"307","line":100,"column":25,"nodeType":"286","messageId":"287","endLine":100,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":115,"column":13,"nodeType":"281","endLine":170,"endColumn":4},{"ruleId":"279","severity":1,"message":"308","line":170,"column":6,"nodeType":"297","endLine":170,"endColumn":21,"suggestions":"309"},{"ruleId":"269","severity":1,"message":"270","line":180,"column":11,"nodeType":"271","endLine":180,"endColumn":52},{"ruleId":"284","severity":1,"message":"307","line":212,"column":28,"nodeType":"286","messageId":"287","endLine":212,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":223,"column":27,"nodeType":"286","messageId":"287","endLine":223,"endColumn":29},{"ruleId":"279","severity":1,"message":"280","line":13,"column":13,"nodeType":"281","endLine":27,"endColumn":4},{"ruleId":"284","severity":1,"message":"285","line":17,"column":56,"nodeType":"286","messageId":"287","endLine":17,"endColumn":58},{"ruleId":"279","severity":1,"message":"310","line":27,"column":6,"nodeType":"297","endLine":27,"endColumn":8,"suggestions":"311"},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'pink' is defined but never used.","'fontWeight' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: Expected corresponding JSX closing tag for <>.\n\n\u001b[0m \u001b[90m  6 |\u001b[39m      \u001b[0m\n\u001b[0m \u001b[90m  7 |\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  8 |\u001b[39m       \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m   )\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 11 |\u001b[39m }\u001b[33m;\u001b[39m\u001b[0m",["312"],["313"],["312"],["313"],"'walletAddress' is assigned a value but never used.","'isWalletConnected' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useEffect' is defined but never used.","'mintMessageState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'axios' is defined but never used.","'GitHubIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'useState' is defined but never used.",["312"],["313"],"React Hook useEffect has a missing dependency: 'tokens'. Either include it or remove the dependency array.","ArrayExpression",["314"],["315"],"React Hook useEffect contains a call to 'setWalletAddress'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["316"],"'ownerDocument' is defined but never used.","'showPlaceBid' is assigned a value but never used.","'showPriceUpdate' is assigned a value but never used.","'showStartAuction' is assigned a value but never used.","'buttonHandler' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'tokenId'. Either include it or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'history' and 'tokenId'. Either include them or remove the dependency array.",["318"],"no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"319","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},"Update the dependencies array to be: [tokens]",{"range":"328","text":"329"},{"range":"330","text":"329"},"Add dependencies array: []",{"range":"331","text":"332"},"Update the dependencies array to be: [tokenId, walletAddress]",{"range":"333","text":"334"},"Update the dependencies array to be: [history, tokenId]",{"range":"335","text":"336"},[1170,1172],"[tokens]",[1068,1070],[1218,1218],", []",[4849,4864],"[tokenId, walletAddress]",[916,918],"[history, tokenId]"]