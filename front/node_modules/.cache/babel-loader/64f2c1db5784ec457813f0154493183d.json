{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\CreatePage\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport ImageIcon from \"@mui/icons-material/Image\"; // import FileBase64 from \"react-file-base64\";\n\nimport \"./create.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  height: 300,\n  bgcolor: \"black\",\n  border: \"1px solid orangered\",\n  boxShadow: 24,\n  p: 4,\n  color: \"white\",\n  borderRadius: \"12px\"\n};\n\nconst Create = () => {\n  _s();\n\n  const maxSize = 2097152;\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [path, setPath] = useState(\"\");\n  const [mintMessage, setMintMessage] = useState(\"\");\n  const [mintMessageState, setMintMessageState] = useState(\"success\"); // const [walletAddress, setWalletAddress] = useState(\"\");\n\n  const [mintTitle, setTitle] = useState(\"\");\n  const [mintPrice, setPrice] = useState(0);\n  const [dexcription, setDexcription] = useState(\"\");\n  const [filePath, setFilePath] = useState(\"\");\n  const [base64Img, setbase64Img] = useState(\"\");\n  const [profileName, setProfileName] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const onDrop = acceptedFile => {\n    if (acceptedFile.length == 0) {\n      alert(\"File size must be less than 2mb\");\n    } else {\n      setSelectedFile(acceptedFile);\n      setPath(acceptedFile[0].path.toString());\n    }\n  };\n\n  const mintNFT = async e => {\n    e.preventDefault();\n\n    if (mintTitle == \"\" || mintPrice == 0 || mintPrice == \"\" || dexcription == \"\" || selectedFile.length === 0) {\n      setMintMessage(\"One of the required fields were left empty. Please try again\");\n      setMintMessageState(\"error\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"msgsender\", localStorage.getItem(\"Address\"));\n    formData.append(\"title\", mintTitle);\n    formData.append(\"price\", mintPrice);\n    formData.append(\"description\", dexcription);\n    formData.append(\"media\", selectedFile[0]);\n    setMintMessage(\"Uploading your video NFT on IPFS\");\n    setMintMessageState(\"info\");\n    console.log(formData);\n    const response = await axios.post(`http://localhost:8080/mintNFT`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n\n    if (response.status == 200) {\n      setMintMessage(\"Sending transaction\");\n      setMintMessageState(\"info\");\n      var params = [{\n        from: localStorage.getItem(\"Address\"),\n        ...response.data.signRequired\n      }];\n      const signed = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params\n      });\n      setMintMessage(\"Transaction successfully sent, <a href='https://testnet.bscscan.com/tx/\" + signed + \"' target='_blank'>view on etherescan</a>\");\n      setMintMessageState(\"success\");\n    } else {\n      setMintMessage(response.data.error);\n      setMintMessageState(\"error\");\n    }\n  };\n\n  const convertToBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n\n  const convertImageToBase64 = async e => {\n    const file = e.target.files[0];\n    const base64 = await convertToBase64(file);\n    setbase64Img(base64);\n  };\n\n  const SubmitProfile = async () => {\n    await axios.post(`http://localhost:8080/registerProfile`, {\n      name: profileName,\n      address: localStorage.getItem(\"Address\"),\n      image: base64Img\n    });\n  };\n\n  useEffect(async () => {\n    const address = localStorage.getItem(\"Address\");\n    await axios.get(`http://localhost:8080/getProfileInfo`, {\n      address: address\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          multiple: false,\n          onDrop: onDrop,\n          accept: \"video/*\",\n          maxSize: maxSize,\n          children: _ref => {\n            let {\n              getRootProps,\n              getInputProps,\n              isDragActive,\n              isDragReject\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropzone\",\n              ...getRootProps(),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), !isDragActive && \"Click here or drop a file to upload!\", isDragActive && !isDragReject && \"Drop it!\", isDragReject && \"File type not accepted, sorry!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: Text,\n          placeholder: \"Title\",\n          onChange: e => {\n            setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: Text,\n          placeholder: \"Price\",\n          onChange: e => {\n            setPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          onChange: e => {\n            setDexcription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mintBtn\",\n          onClick: mintNFT,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: mintMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleOpen();\n      },\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"inputTag\",\n          back: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"registerDiv\",\n            children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n              placeholder: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), filePath ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: filePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setFilePath(e.target.value);\n              convertImageToBase64(e);\n            },\n            style: {\n              display: \"none\"\n            },\n            accept: \"image/jpeg\",\n            id: \"inputTag\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          onChange: e => {\n            setProfileName(e.target.value);\n          },\n          style: {\n            width: \"255px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerButton\",\n          onClick: SubmitProfile,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"jT8YW8QHXNT6OdJJFRdvl3Qcz2A=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/CreatePage/Create.js"],"names":["React","useEffect","useState","Dropzone","axios","Box","Modal","ImageIcon","style","position","top","left","display","justifyContent","alignItems","flexDirection","transform","width","height","bgcolor","border","boxShadow","p","color","borderRadius","Create","maxSize","selectedFile","setSelectedFile","path","setPath","mintMessage","setMintMessage","mintMessageState","setMintMessageState","mintTitle","setTitle","mintPrice","setPrice","dexcription","setDexcription","filePath","setFilePath","base64Img","setbase64Img","profileName","setProfileName","open","setOpen","handleOpen","handleClose","onDrop","acceptedFile","length","alert","toString","mintNFT","e","preventDefault","formData","FormData","append","localStorage","getItem","console","log","response","post","headers","status","params","from","data","signRequired","signed","window","ethereum","request","method","error","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","convertImageToBase64","target","files","base64","SubmitProfile","name","address","image","get","getRootProps","getInputProps","isDragActive","isDragReject","Text","value"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport ImageIcon from \"@mui/icons-material/Image\";\r\n// import FileBase64 from \"react-file-base64\";\r\nimport \"./create.css\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  height: 300,\r\n  bgcolor: \"black\",\r\n  border: \"1px solid orangered\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  color: \"white\",\r\n  borderRadius: \"12px\",\r\n};\r\n\r\nconst Create = () => {\r\n  const maxSize = 2097152;\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [path, setPath] = useState(\"\");\r\n\r\n  const [mintMessage, setMintMessage] = useState(\"\");\r\n  const [mintMessageState, setMintMessageState] = useState(\"success\");\r\n\r\n  // const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [mintTitle, setTitle] = useState(\"\");\r\n  const [mintPrice, setPrice] = useState(0);\r\n  const [dexcription, setDexcription] = useState(\"\");\r\n\r\n  const [filePath, setFilePath] = useState(\"\");\r\n  const [base64Img, setbase64Img] = useState(\"\");\r\n  const [profileName, setProfileName] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const onDrop = (acceptedFile) => {\r\n    if (acceptedFile.length == 0) {\r\n      alert(\"File size must be less than 2mb\");\r\n    } else {\r\n      setSelectedFile(acceptedFile);\r\n      setPath(acceptedFile[0].path.toString());\r\n    }\r\n  };\r\n\r\n  const mintNFT = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      mintTitle == \"\" ||\r\n      mintPrice == 0 ||\r\n      mintPrice == \"\" ||\r\n      dexcription == \"\" ||\r\n      selectedFile.length === 0\r\n    ) {\r\n      setMintMessage(\r\n        \"One of the required fields were left empty. Please try again\"\r\n      );\r\n      setMintMessageState(\"error\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"msgsender\", localStorage.getItem(\"Address\"));\r\n    formData.append(\"title\", mintTitle);\r\n    formData.append(\"price\", mintPrice);\r\n    formData.append(\"description\", dexcription);\r\n    formData.append(\"media\", selectedFile[0]);\r\n\r\n    setMintMessage(\"Uploading your video NFT on IPFS\");\r\n    setMintMessageState(\"info\");\r\n    console.log(formData);\r\n\r\n    const response = await axios.post(\r\n      `http://localhost:8080/mintNFT`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status == 200) {\r\n      setMintMessage(\"Sending transaction\");\r\n      setMintMessageState(\"info\");\r\n      var params = [\r\n        {\r\n          from: localStorage.getItem(\"Address\"),\r\n          ...response.data.signRequired,\r\n        },\r\n      ];\r\n      const signed = await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params,\r\n      });\r\n      setMintMessage(\r\n        \"Transaction successfully sent, <a href='https://testnet.bscscan.com/tx/\" +\r\n          signed +\r\n          \"' target='_blank'>view on etherescan</a>\"\r\n      );\r\n      setMintMessageState(\"success\");\r\n    } else {\r\n      setMintMessage(response.data.error);\r\n      setMintMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  const convertToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n  const convertImageToBase64 = async (e) => {\r\n    const file = e.target.files[0];\r\n    const base64 = await convertToBase64(file);\r\n    setbase64Img(base64);\r\n  };\r\n\r\n  const SubmitProfile = async () => {\r\n    await axios.post(`http://localhost:8080/registerProfile`, {\r\n      name: profileName,\r\n      address: localStorage.getItem(\"Address\"),\r\n      image: base64Img,\r\n    });\r\n  };\r\n\r\n  useEffect(async()=>{\r\n\r\n    const address = localStorage.getItem(\"Address\")\r\n    await axios.get(`http://localhost:8080/getProfileInfo`,{\r\n      address: address\r\n    }) \r\n      \r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"background\">\r\n        <h1>Create an NFT</h1>\r\n        <form>\r\n          <Dropzone\r\n            multiple={false}\r\n            onDrop={onDrop}\r\n            accept=\"video/*\"\r\n            maxSize={maxSize}\r\n          >\r\n            {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\r\n              return (\r\n                <div className=\"dropzone\" {...getRootProps()}>\r\n                  <input {...getInputProps()} />\r\n                  {!isDragActive && \"Click here or drop a file to upload!\"}\r\n                  {isDragActive && !isDragReject && \"Drop it!\"}\r\n                  {isDragReject && \"File type not accepted, sorry!\"}\r\n                </div>\r\n              );\r\n            }}\r\n          </Dropzone>\r\n\r\n          <p>{path}</p>\r\n          <input\r\n            type={Text}\r\n            placeholder=\"Title\"\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n          />\r\n          <input\r\n            type={Text}\r\n            placeholder=\"Price\"\r\n            onChange={(e) => {\r\n              setPrice(e.target.value);\r\n            }}\r\n          />\r\n          <textarea\r\n            placeholder=\"Description\"\r\n            onChange={(e) => {\r\n              setDexcription(e.target.value);\r\n            }}\r\n          ></textarea>\r\n          <button className=\"mintBtn\" onClick={mintNFT}>\r\n            Mint\r\n          </button>\r\n        </form>\r\n\r\n        <a>{mintMessage}</a>\r\n        {/* <p>{mintMessageState}</p> */}\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          handleOpen();\r\n        }}\r\n      >\r\n        Open modal\r\n      </button>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <h1>Register Profile</h1>\r\n\r\n          <label for=\"inputTag\" back>\r\n            <div id=\"registerDiv\">\r\n              <ImageIcon placeholder=\"Select Image\" />\r\n              {filePath ? <span>{filePath}</span> : <span>Select Image</span>}\r\n            </div>\r\n\r\n            <input\r\n              onChange={(e) => {\r\n                setFilePath(e.target.value);\r\n                convertImageToBase64(e);\r\n              }}\r\n              style={{ display: \"none\" }}\r\n              accept=\"image/jpeg\"\r\n              id=\"inputTag\"\r\n              type=\"file\"\r\n            />\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            onChange={(e) => {\r\n              setProfileName(e.target.value);\r\n            }}\r\n            style={{ width: \"255px\" }}\r\n          />\r\n\r\n          <button className=\"registerButton\" onClick={SubmitProfile}>\r\n            Register\r\n          </button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}