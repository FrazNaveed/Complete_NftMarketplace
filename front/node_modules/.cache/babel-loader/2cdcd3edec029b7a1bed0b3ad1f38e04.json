{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [walletBalance, setWalletBalance] = useState(0);\n  window.ethereum.on(\"accountsChanged\", () => {\n    isWalletConnected();\n  });\n\n  const isWalletConnected = async () => {\n    let address = window.ethereum.selectedAddress;\n    localStorage.setItem(\"walletAddress\", address);\n    setWalletAddress(address ? address.toString() : \"\");\n  };\n\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      alert(\"Install metamask\");\n    }\n\n    try {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setWalletAddress(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(async () => {\n    if (!window.ethereum) {\n      return;\n    }\n\n    let address = await window.ethereum.selectedAddress;\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n    setWalletAddress(address ? address.toString() : \"\");\n    localStorage.setItem(\"walletAddress\", address);\n\n    if (address) {\n      const response = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\n        params: {\n          address: address\n        }\n      });\n      const balance = response.data.result / Math.pow(10, 18);\n      setWalletBalance(balance);\n    }\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"heading\",\n        children: \"NFT Marketplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/\",\n              activeClassName: \"active\",\n              children: [\" \", \"Explore\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/popular\",\n              activeClassName: \"active\",\n              children: [\" \", \"Popular\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/sale\",\n              activeClassName: \"active\",\n              children: [\" \", \"Sale\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/collection\",\n              activeClassName: \"active\",\n              children: [\" \", \"My Collection\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/creators\",\n              activeClassName: \"active\",\n              children: [\" \", \"Creators\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: walletAddress == \"\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: connectWalletHandler,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/create\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: [walletBalance, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"WSgUDg3RXMKwmn5yR3InxpRAN3U=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/Navbar/Navbar.js"],"names":["React","useEffect","useState","NavLink","axios","Navbar","walletAddress","setWalletAddress","walletBalance","setWalletBalance","window","ethereum","on","isWalletConnected","address","selectedAddress","localStorage","setItem","toString","connectWalletHandler","alert","accounts","request","method","err","console","log","location","reload","response","get","params","balance","data","result","Math","pow"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n\r\n  window.ethereum.on(\"accountsChanged\", () => {\r\n    isWalletConnected();\r\n  });\r\n\r\n  const isWalletConnected = async () => {\r\n    let address = window.ethereum.selectedAddress;\r\n    localStorage.setItem(\"walletAddress\", address);\r\n\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n  };\r\n\r\n  const connectWalletHandler = async () => {\r\n    const { ethereum } = window;\r\n\r\n    if (!ethereum) {\r\n      alert(\"Install metamask\");\r\n    }\r\n    try {\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setWalletAddress(accounts[0]);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!window.ethereum) {\r\n      return;\r\n    }\r\n    let address = await window.ethereum.selectedAddress;\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n    localStorage.setItem(\"walletAddress\", address);\r\n\r\n    if (address) {\r\n      const response = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\r\n        params: { address: address },\r\n      });\r\n\r\n      const balance = response.data.result / Math.pow(10, 18);\r\n      setWalletBalance(balance);\r\n    }\r\n  }, [walletAddress]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <p className=\"heading\">NFT Marketplace</p>\r\n        <nav>\r\n          <ul className=\"items\">\r\n            <li>\r\n              <NavLink to=\"/\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Explore{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/popular\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Popular{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/sale\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Sale{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/collection\" activeClassName=\"active\">\r\n                {\" \"}\r\n                My Collection{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/creators\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Creators{\" \"}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <div className=\"buttons\">\r\n          {walletAddress == \"\" ? (\r\n            <button type=\"button\" onClick={connectWalletHandler}>\r\n              <p>Connect Wallet</p>\r\n            </button>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <NavLink to=\"/create\">\r\n                <button>\r\n                  <span>Create</span>\r\n                </button>\r\n              </NavLink>\r\n              <button>{walletBalance} </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}