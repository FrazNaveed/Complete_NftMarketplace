{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\CreatePage\\\\Create.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport ImageIcon from \"@mui/icons-material/Image\";\nimport \"./create.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  height: 300,\n  bgcolor: \"black\",\n  border: \"1px solid orangered\",\n  boxShadow: 24,\n  p: 4,\n  color: \"white\",\n  borderRadius: \"12px\"\n};\n\nconst Create = () => {\n  _s();\n\n  const maxSize = 2097152;\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [path, setPath] = useState(\"\");\n  const [mintMessage, setMintMessage] = useState(\"\");\n  const [mintMessageState, setMintMessageState] = useState(\"success\");\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [mintTitle, setTitle] = useState(\"\");\n  const [mintPrice, setPrice] = useState(0);\n  const [dexcription, setDexcription] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [filePath, setFilePath] = useState(\"\");\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const onDrop = acceptedFile => {\n    if (acceptedFile.length == 0) {\n      alert(\"File size must be less than 2mb\");\n    } else {\n      setSelectedFile(acceptedFile);\n      setPath(acceptedFile[0].path.toString());\n      console.log(path);\n    }\n  };\n\n  useEffect(async () => {\n    if (!window.ethereum) {\n      alert(\"Intall Metamask Wallet\");\n    }\n\n    let address = await window.ethereum.selectedAddress;\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n    setWalletAddress(address ? address.toString() : \"\");\n  });\n\n  const mintNFT = async e => {\n    e.preventDefault();\n\n    if (mintTitle == \"\" || mintPrice == 0 || mintPrice == \"\" || dexcription == \"\" || selectedFile.length === 0) {\n      setMintMessage(\"One of the required fields were left empty. Please try again\");\n      setMintMessageState(\"error\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"msgsender\", walletAddress);\n    formData.append(\"title\", mintTitle);\n    formData.append(\"price\", mintPrice);\n    formData.append(\"description\", dexcription);\n    formData.append(\"media\", selectedFile[0]);\n    setMintMessage(\"Uploading your video NFT on IPFS\");\n    setMintMessageState(\"info\");\n    console.log(formData);\n    const response = await axios.post(`http://localhost:8080/mintNFT`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n\n    if (response.status == 200) {\n      setMintMessage(\"Sending transaction\");\n      setMintMessageState(\"info\");\n      var params = [{\n        from: walletAddress,\n        ...response.data.signRequired\n      }];\n      const signed = await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params\n      });\n      setMintMessage(\"Transaction successfully sent, <a href='https://testnet.bscscan.com/tx/\" + signed + \"' target='_blank'>view on etherescan</a>\");\n      setMintMessageState(\"success\");\n    } else {\n      setMintMessage(response.data.error);\n      setMintMessageState(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n          multiple: false,\n          onDrop: onDrop,\n          accept: \"video/*\",\n          maxSize: maxSize,\n          children: _ref => {\n            let {\n              getRootProps,\n              getInputProps,\n              isDragActive,\n              isDragReject\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropzone\",\n              ...getRootProps(),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), !isDragActive && \"Click here or drop a file to upload!\", isDragActive && !isDragReject && \"Drop it!\", isDragReject && \"File type not accepted, sorry!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: Text,\n          placeholder: \"Title\",\n          onChange: e => {\n            setTitle(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: Text,\n          placeholder: \"Price\",\n          onChange: e => {\n            setPrice(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Description\",\n          onChange: e => {\n            setDexcription(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mintBtn\",\n          onClick: mintNFT,\n          children: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: mintMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleOpen();\n      },\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"inputTag\",\n          back: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"registerDiv\",\n            children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n              placeholder: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), filePath ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: filePath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setFilePath(e.target.value);\n            },\n            style: {\n              display: \"none\"\n            },\n            accept: \"image/png, image/jpeg\",\n            id: \"inputTag\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          style: {\n            width: \"255px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"registerButton\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"EvV0LD4o85d6N+9k+kOjBcCdB7M=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/CreatePage/Create.js"],"names":["React","useEffect","useState","Dropzone","axios","Box","Modal","ImageIcon","style","position","top","left","display","justifyContent","alignItems","flexDirection","transform","width","height","bgcolor","border","boxShadow","p","color","borderRadius","Create","maxSize","selectedFile","setSelectedFile","path","setPath","mintMessage","setMintMessage","mintMessageState","setMintMessageState","walletAddress","setWalletAddress","mintTitle","setTitle","mintPrice","setPrice","dexcription","setDexcription","open","setOpen","filePath","setFilePath","handleOpen","handleClose","onDrop","acceptedFile","length","alert","toString","console","log","window","ethereum","address","selectedAddress","on","location","reload","mintNFT","e","preventDefault","formData","FormData","append","response","post","headers","status","params","from","data","signRequired","signed","request","method","error","getRootProps","getInputProps","isDragActive","isDragReject","Text","target","value"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport ImageIcon from \"@mui/icons-material/Image\";\r\nimport \"./create.css\";\r\n\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  height: 300,\r\n  bgcolor: \"black\",\r\n  border: \"1px solid orangered\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  color: \"white\",\r\n  borderRadius: \"12px\",\r\n};\r\n\r\n\r\nconst Create = () => {\r\n  const maxSize = 2097152;\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [path, setPath] = useState(\"\");\r\n  const [mintMessage, setMintMessage] = useState(\"\");\r\n  const [mintMessageState, setMintMessageState] = useState(\"success\");\r\n\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [mintTitle, setTitle] = useState(\"\");\r\n  const [mintPrice, setPrice] = useState(0);\r\n  const [dexcription, setDexcription] = useState(\"\");\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [filePath, setFilePath] = useState(\"\");\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const onDrop = (acceptedFile) => {\r\n    if (acceptedFile.length == 0) {\r\n      alert(\"File size must be less than 2mb\");\r\n    } else {\r\n      setSelectedFile(acceptedFile);\r\n      setPath((acceptedFile[0].path).toString());\r\n      console.log(path);\r\n    }\r\n  };\r\n\r\n  useEffect(async ()=>{\r\n\r\n\r\n    if (!window.ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n    let address = await window.ethereum.selectedAddress;\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address ? address.toString() : \"\");\r\n  })\r\n\r\n  const mintNFT = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      mintTitle == \"\" ||\r\n      mintPrice == 0 ||\r\n      mintPrice == \"\" ||\r\n      dexcription == \"\" || \r\n      selectedFile.length === 0\r\n    ) {\r\n      setMintMessage(\r\n        \"One of the required fields were left empty. Please try again\"\r\n      );\r\n      setMintMessageState(\"error\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"msgsender\", walletAddress);\r\n    formData.append(\"title\", mintTitle);\r\n    formData.append(\"price\", mintPrice);\r\n    formData.append(\"description\", dexcription);\r\n    formData.append(\"media\", selectedFile[0]);\r\n\r\n    setMintMessage(\"Uploading your video NFT on IPFS\");\r\n    setMintMessageState(\"info\");\r\n    console.log(formData);\r\n\r\n    const response = await axios.post(\r\n      `http://localhost:8080/mintNFT`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n    if (response.status == 200) {\r\n      setMintMessage(\"Sending transaction\");\r\n      setMintMessageState(\"info\");\r\n      var params = [\r\n        {\r\n          from: walletAddress,\r\n          ...response.data.signRequired,\r\n        },\r\n      ];\r\n      const signed = await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params,\r\n      });\r\n      setMintMessage(\r\n        \"Transaction successfully sent, <a href='https://testnet.bscscan.com/tx/\" +\r\n          signed +\r\n          \"' target='_blank'>view on etherescan</a>\"\r\n      );\r\n      setMintMessageState(\"success\");\r\n    } else {\r\n      setMintMessage(response.data.error);\r\n      setMintMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"background\">\r\n      <h1>Create an NFT</h1>\r\n      <form>\r\n        <Dropzone\r\n          multiple={false}\r\n          onDrop={onDrop}\r\n          accept=\"video/*\"\r\n          maxSize={maxSize}\r\n        >\r\n          {({ getRootProps, getInputProps, isDragActive, isDragReject }) => {\r\n            return (\r\n              <div className=\"dropzone\" {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {!isDragActive && \"Click here or drop a file to upload!\"}\r\n                {isDragActive && !isDragReject && \"Drop it!\"}\r\n                {isDragReject && \"File type not accepted, sorry!\"}\r\n              </div>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n\r\n        <p>{path}</p>\r\n        <input type={Text} placeholder=\"Title\" onChange={(e)=>{setTitle(e.target.value)}}/>\r\n        <input type={Text} placeholder=\"Price\" onChange={(e)=>{setPrice(e.target.value)}} />\r\n        <textarea placeholder=\"Description\" onChange={(e)=>{setDexcription(e.target.value)}}></textarea>\r\n        <button className=\"mintBtn\" onClick={mintNFT}>Mint</button>\r\n      </form>\r\n\r\n      <a>{mintMessage}</a>\r\n      {/* <p>{mintMessageState}</p> */}\r\n      </div>\r\n\r\n      <button\r\n          onClick={() => {\r\n            handleOpen();\r\n          }}\r\n        >\r\n          Open modal\r\n        </button>\r\n\r\n      <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <h1>Register Profile</h1>\r\n            <label for=\"inputTag\" back>\r\n              <div id=\"registerDiv\">\r\n                <ImageIcon placeholder=\"Select Image\" />\r\n                {filePath ? <span>{filePath}</span> : <span>Select Image</span>}\r\n              </div>\r\n              <input\r\n                onChange={(e) => {\r\n                  setFilePath(e.target.value);\r\n                }}\r\n                style={{ display: \"none\" }}\r\n                accept=\"image/png, image/jpeg\"\r\n                id=\"inputTag\"\r\n                type=\"file\"\r\n              />\r\n            </label>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Name\"\r\n              style={{ width: \"255px\" }}\r\n            />\r\n\r\n            <button className=\"registerButton\">Register</button>\r\n          </Box>\r\n        </Modal>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}