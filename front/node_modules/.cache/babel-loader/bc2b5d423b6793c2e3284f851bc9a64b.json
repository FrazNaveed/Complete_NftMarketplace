{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\Transactions\\\\Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./transactions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [nfts, setNfts] = useState([]);\n  var tokens = [];\n\n  const find = async () => {\n    var startTimestamp = new Date(startDate).getTime() / 1000;\n    var endTimestamp = new Date(endDate).getTime() / 1000;\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/getHistoricalNFT`);\n\n    for (var i = 0; i < [...res.data.result].length; i++) {\n      if ([...res.data.result][i].returnValues.timestamp >= startTimestamp && [...res.data.result][i].returnValues.timestamp <= endTimestamp) tokens.push([...res.data.result][i].returnValues.tokenId);\n    }\n\n    console.log(tokens);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactionsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"findBetweenDates\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Dates to find NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setStartDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter Start Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setEndDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter End Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"findButton\",\n      onClick: find,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"WW3I840cmTOU9tTLJlI/XM94ITA=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/Transactions/Transactions.js"],"names":["React","useState","axios","Transactions","startDate","setStartDate","endDate","setEndDate","nfts","setNfts","tokens","find","startTimestamp","Date","getTime","endTimestamp","res","get","process","env","REACT_APP_API_URL","i","data","result","length","returnValues","timestamp","push","tokenId","console","log","e","target","value","type","now"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./transactions.css\";\r\n\r\nconst Transactions = () => {\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [nfts, setNfts] = useState([]);\r\n\r\n  var tokens = [];\r\n  const find = async() =>{\r\n\r\n    var startTimestamp = new Date(startDate).getTime() / 1000;\r\n    var endTimestamp = new Date(endDate).getTime() / 1000;\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/getHistoricalNFT`);\r\n\r\n      for(var i =0; i< [...res.data.result].length; i++){\r\n\r\n        if([...res.data.result][i].returnValues.timestamp>=startTimestamp &&\r\n          [...res.data.result][i].returnValues.timestamp<=endTimestamp \r\n          )\r\n          tokens.push([...res.data.result][i].returnValues.tokenId);\r\n      }\r\n      console.log(tokens);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"transactionsDiv\">\r\n      <div className=\"findBetweenDates\">\r\n       <center> <h2>Select Dates to find NFTs</h2></center>\r\n        <input\r\n         type=\"text\"\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter Start Date\" \r\n          min={Date.now()}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter End Date\" \r\n          min={Date.now()}\r\n        />\r\n      </div>\r\n      <button className=\"findButton\" onClick={find}>Find</button>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"]},"metadata":{},"sourceType":"module"}