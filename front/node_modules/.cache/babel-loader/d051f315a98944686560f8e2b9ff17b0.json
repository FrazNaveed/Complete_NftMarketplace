{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\Transactions\\\\Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \".././Spinner/Spinner\";\nimport \"./transactions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [nfts, setNfts] = useState([]);\n  var tokens = [];\n\n  const find = async () => {\n    setIsLoading(true);\n    var startTimestamp = new Date(startDate).getTime() / 1000;\n    var endTimestamp = new Date(endDate).getTime() / 1000;\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/getHistoricalNFT`);\n    var _tokenId = [...res.data.result][0].returnValues.tokenId; // for(var i =0; i< [...res.data.result].length; i++){\n    //   if([...res.data.result][i].returnValues.timestamp>=startTimestamp &&\n    //     [...res.data.result][i].returnValues.timestamp<=endTimestamp \n    //     )\n    //     tokens.push([...res.data.result][i].returnValues.tokenId);\n    //     const uri = await axios.get(\n    //       `${process.env.REACT_APP_API_URL}/getTokenURI`,\n    //       {\n    //         params: { tokenId: [...res.data.result][i].returnValues.tokenId },\n    //       }\n    //     );\n    //     const uriResponse = await axios.get(uri.data.result);\n    //     const price = await axios.get(\n    //       `${process.env.REACT_APP_API_URL}/getTokenPrice`,\n    //       {\n    //         params: { tokenId: [...res.data.result][i].returnValues.tokenId},\n    //       }\n    //     );\n    //     const owner = await axios.get(\n    //       `${process.env.REACT_APP_API_URL}/ownerOf`,\n    //       {\n    //         params: { tokenId: [...res.data.result][i].returnValues.tokenId},\n    //       }\n    //     );\n    //     const profile = await axios.get(\n    //       `${process.env.REACT_APP_API_URL}/getProfileInfo`,\n    //       {\n    //         params: {\n    //           address: owner.data.result.toLowerCase(),\n    //         },\n    //       }\n    //     );\n    //     tokens.push({\n    //       ...uriResponse.data,\n    //       tokenId: [...res.data.result][i].returnValues.tokenId,\n    //       price: price.data.result,\n    //       name: profile.data[0].name,\n    //       image: profile.data[0].profileImg,\n    //     });\n    // }\n\n    console.log(tokens);\n    setNfts(tokens);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactionsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"findBetweenDates\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Dates to find NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setStartDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter Start Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setEndDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter End Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"findButton\",\n      onClick: find,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this) : nfts.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/details/${value.tokenId}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upperSection\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              src: value.media,\n              preload: \"auto|metadata|none\",\n              className: \"vid\",\n              style: {\n                width: \"268px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lowerSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${value.image}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"orangered\",\n                  fontWeight: \"bold\"\n                },\n                children: [value.price / Math.pow(10, 18), \" Tokens\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: [\" \", value.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"p9CGUpU8Lrvl8f2sIu/QTJAcxV8=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/Transactions/Transactions.js"],"names":["React","useState","axios","Link","Spinner","Transactions","startDate","setStartDate","endDate","setEndDate","isLoading","setIsLoading","nfts","setNfts","tokens","find","startTimestamp","Date","getTime","endTimestamp","res","get","process","env","REACT_APP_API_URL","_tokenId","data","result","returnValues","tokenId","console","log","e","target","value","type","now","map","index","media","width","image","name","color","fontWeight","price","Math","pow","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \".././Spinner/Spinner\";\r\nimport \"./transactions.css\";\r\n\r\nconst Transactions = () => {\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [nfts, setNfts] = useState([]);\r\n\r\n  var tokens = [];\r\n  const find = async() =>{\r\n    setIsLoading(true);\r\n    var startTimestamp = new Date(startDate).getTime() / 1000;\r\n    var endTimestamp = new Date(endDate).getTime() / 1000;\r\n\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/getHistoricalNFT`);\r\n    var _tokenId =  [...res.data.result][0].returnValues.tokenId;\r\n      // for(var i =0; i< [...res.data.result].length; i++){\r\n\r\n      //   if([...res.data.result][i].returnValues.timestamp>=startTimestamp &&\r\n      //     [...res.data.result][i].returnValues.timestamp<=endTimestamp \r\n      //     )\r\n      //     tokens.push([...res.data.result][i].returnValues.tokenId);\r\n         \r\n      //     const uri = await axios.get(\r\n      //       `${process.env.REACT_APP_API_URL}/getTokenURI`,\r\n      //       {\r\n      //         params: { tokenId: [...res.data.result][i].returnValues.tokenId },\r\n      //       }\r\n      //     );\r\n      //     const uriResponse = await axios.get(uri.data.result);\r\n      //     const price = await axios.get(\r\n      //       `${process.env.REACT_APP_API_URL}/getTokenPrice`,\r\n      //       {\r\n      //         params: { tokenId: [...res.data.result][i].returnValues.tokenId},\r\n      //       }\r\n      //     );\r\n  \r\n      //     const owner = await axios.get(\r\n      //       `${process.env.REACT_APP_API_URL}/ownerOf`,\r\n      //       {\r\n      //         params: { tokenId: [...res.data.result][i].returnValues.tokenId},\r\n      //       }\r\n      //     );\r\n  \r\n      //     const profile = await axios.get(\r\n      //       `${process.env.REACT_APP_API_URL}/getProfileInfo`,\r\n      //       {\r\n      //         params: {\r\n      //           address: owner.data.result.toLowerCase(),\r\n      //         },\r\n      //       }\r\n      //     );\r\n      //     tokens.push({\r\n      //       ...uriResponse.data,\r\n      //       tokenId: [...res.data.result][i].returnValues.tokenId,\r\n      //       price: price.data.result,\r\n      //       name: profile.data[0].name,\r\n      //       image: profile.data[0].profileImg,\r\n      //     });\r\n      // }\r\n      console.log(tokens)\r\n      setNfts(tokens);\r\n      setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"transactionsDiv\">\r\n      <div className=\"findBetweenDates\">\r\n       <center> <h2>Select Dates to find NFTs</h2></center>\r\n        <input\r\n         type=\"text\"\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter Start Date\" \r\n          min={Date.now()}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter End Date\" \r\n          min={Date.now()}\r\n        />\r\n      </div>\r\n      <button className=\"findButton\" onClick={find}>Find</button>\r\n\r\n      {isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n          nfts.map((value, index) => {\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <Link to={`/details/${value.tokenId}`}>\r\n                  <div className=\"upperSection\">\r\n                    <video\r\n                      src={value.media}\r\n                      preload=\"auto|metadata|none\"\r\n                      className=\"vid\"\r\n                      style={{ width: \"268px\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"lowerSection\">\r\n                    <img src={`${value.image}`} />\r\n                    <h4>{value.name}</h4>\r\n                    <p>\r\n                      Price:{\" \"}\r\n                      <span style={{ color: \"orangered\", fontWeight: \"bold\" }}>\r\n                        {value.price / Math.pow(10, 18)} Tokens\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n\r\n                  <h2 className=\"title\"> {value.title}</h2>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"]},"metadata":{},"sourceType":"module"}