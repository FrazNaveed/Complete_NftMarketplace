{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\Transactions\\\\Transactions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \".././Spinner/Spinner\";\nimport \"./transactions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transactions = () => {\n  _s();\n\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [nfts, setNfts] = useState([]);\n  var tokens = [];\n\n  const find = async () => {\n    setIsLoading(true);\n    var startTimestamp = new Date(startDate).getTime() / 1000;\n    var endTimestamp = new Date(endDate).getTime() / 1000;\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/getHistoricalNFT`);\n    console.log(res);\n\n    for (var i = 0; i < [...res.data.result].length; i++) {\n      if (res.data.result[i].returnValues.timestamp >= startTimestamp && res.data.result[i].returnValues.timestamp <= endTimestamp) {\n        const uri = await axios.get(`${process.env.REACT_APP_API_URL}/getTokenURI`, {\n          params: {\n            tokenId: res.data.result[i].returnValues.tokenId\n          }\n        });\n        const uriResponse = await axios.get(uri.data.result);\n        const price = await axios.get(`${process.env.REACT_APP_API_URL}/getTokenPrice`, {\n          params: {\n            tokenId: res.data.result[i].returnValues.tokenId\n          }\n        });\n        const owner = await axios.get(`${process.env.REACT_APP_API_URL}/ownerOf`, {\n          params: {\n            tokenId: res.data.result[i].returnValues.tokenId\n          }\n        });\n        const profile = await axios.get(`${process.env.REACT_APP_API_URL}/getProfileInfo`, {\n          params: {\n            address: owner.data.result.toLowerCase()\n          }\n        });\n        tokens.push({ ...uriResponse.data,\n          tokenId: res.data.result[i].returnValues.tokenId,\n          price: price.data.result,\n          name: profile.data[0].name,\n          image: profile.data[0].profileImg\n        });\n      }\n    }\n\n    console.log(tokens);\n    setNfts(tokens);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactionsDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"findBetweenDates\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Dates to find NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setStartDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter Start Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setEndDate(e.target.value),\n        onFocus: e => e.target.type = \"date\",\n        onBlur: e => e.target.type = \"text\",\n        placeholder: \"Enter End Date\",\n        min: Date.now()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"findButton\",\n      onClick: find,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : nfts.map((value, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/details/${value.tokenId}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upperSection\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              src: value.media,\n              preload: \"auto|metadata|none\",\n              className: \"vid\",\n              style: {\n                width: \"268px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lowerSection\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${value.image}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"orangered\",\n                  fontWeight: \"bold\"\n                },\n                children: [value.price / Math.pow(10, 18), \" Tokens\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: [\" \", value.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"p9CGUpU8Lrvl8f2sIu/QTJAcxV8=\");\n\n_c = Transactions;\nexport default Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/Transactions/Transactions.js"],"names":["React","useState","axios","Link","Spinner","Transactions","startDate","setStartDate","endDate","setEndDate","isLoading","setIsLoading","nfts","setNfts","tokens","find","startTimestamp","Date","getTime","endTimestamp","res","get","process","env","REACT_APP_API_URL","console","log","i","data","result","length","returnValues","timestamp","uri","params","tokenId","uriResponse","price","owner","profile","address","toLowerCase","push","name","image","profileImg","e","target","value","type","now","map","index","media","width","color","fontWeight","Math","pow","title"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \".././Spinner/Spinner\";\r\nimport \"./transactions.css\";\r\n\r\nconst Transactions = () => {\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [nfts, setNfts] = useState([]);\r\n\r\n  var tokens = [];\r\n  const find = async () => {\r\n    setIsLoading(true);\r\n    var startTimestamp = new Date(startDate).getTime() / 1000;\r\n    var endTimestamp = new Date(endDate).getTime() / 1000;\r\n\r\n    const res = await axios.get(\r\n      `${process.env.REACT_APP_API_URL}/getHistoricalNFT`\r\n    );\r\n    console.log(res);\r\n\r\n    for (var i = 0; i < [...res.data.result].length; i++) {\r\n      if (\r\n        res.data.result[i].returnValues.timestamp >= startTimestamp &&\r\n        res.data.result[i].returnValues.timestamp <= endTimestamp\r\n      ) {\r\n        const uri = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/getTokenURI`,\r\n          {\r\n            params: { tokenId: res.data.result[i].returnValues.tokenId },\r\n          }\r\n        );\r\n\r\n        const uriResponse = await axios.get(uri.data.result);\r\n        const price = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/getTokenPrice`,\r\n          {\r\n            params: { tokenId: res.data.result[i].returnValues.tokenId },\r\n          }\r\n        );\r\n\r\n        const owner = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/ownerOf`,\r\n          {\r\n            params: { tokenId: res.data.result[i].returnValues.tokenId },\r\n          }\r\n        );\r\n\r\n        const profile = await axios.get(\r\n          `${process.env.REACT_APP_API_URL}/getProfileInfo`,\r\n          {\r\n            params: {\r\n              address: owner.data.result.toLowerCase(),\r\n            },\r\n          }\r\n        );\r\n\r\n        tokens.push({\r\n          ...uriResponse.data,\r\n          tokenId: res.data.result[i].returnValues.tokenId,\r\n          price: price.data.result,\r\n          name: profile.data[0].name,\r\n          image: profile.data[0].profileImg,\r\n        });\r\n      }\r\n    }\r\n    console.log(tokens);\r\n    setNfts(tokens);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"transactionsDiv\">\r\n      <div className=\"findBetweenDates\">\r\n        <center>\r\n          {\" \"}\r\n          <h2>Select Dates to find NFTs</h2>\r\n        </center>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setStartDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter Start Date\"\r\n          min={Date.now()}\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setEndDate(e.target.value)}\r\n          onFocus={(e) => (e.target.type = \"date\")}\r\n          onBlur={(e) => (e.target.type = \"text\")}\r\n          placeholder=\"Enter End Date\"\r\n          min={Date.now()}\r\n        />\r\n      </div>\r\n      <button className=\"findButton\" onClick={find}>\r\n        Find\r\n      </button>\r\n\r\n      {isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        nfts.map((value, index) => {\r\n          return (\r\n            <div className=\"card\" key={index}>\r\n              <Link to={`/details/${value.tokenId}`}>\r\n                <div className=\"upperSection\">\r\n                  <video\r\n                    src={value.media}\r\n                    preload=\"auto|metadata|none\"\r\n                    className=\"vid\"\r\n                    style={{ width: \"268px\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"lowerSection\">\r\n                  <img src={`${value.image}`} />\r\n                  <h4>{value.name}</h4>\r\n                  <p>\r\n                    Price:{\" \"}\r\n                    <span style={{ color: \"orangered\", fontWeight: \"bold\" }}>\r\n                      {value.price / Math.pow(10, 18)} Tokens\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n\r\n                <h2 className=\"title\"> {value.title}</h2>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transactions;\r\n"]},"metadata":{},"sourceType":"module"}