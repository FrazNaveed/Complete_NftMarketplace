{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\DetailsPage\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport \"./details.css\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport History from \"../HIstorySection/History\";\nimport { ownerDocument } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = () => {\n  _s();\n\n  let {\n    tokenId\n  } = useParams();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [tokenData, setTokenData] = useState({});\n  const [showPlaceBid, setShowPlaceBid] = useState(false);\n  const [showPriceUpdate, setShowPriceUpdate] = useState(false);\n  const [showStartAuction, setShowStartAuction] = useState(false);\n\n  const buyNFT = async () => {\n    let address = await window.ethereum.selectedAddress;\n    const balance = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\n      params: {\n        address: address\n      }\n    });\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n\n    if (balance >= price) {\n      const response = await axios.post(`http://localhost:8080/buyNFT`, {\n        msgsender: walletAddress,\n        price: tokenData.price,\n        tokenId: tokenId\n      });\n      const tx = response.data.signRequired;\n\n      if (response.status == 200) {\n        for (let txObj of tx) {\n          var params = [txObj];\n          const txHash = await window.ethereum.request({\n            method: \"eth_sendTransaction\",\n            params\n          });\n          let txReceipt = null;\n\n          while (txReceipt == null) {\n            txReceipt = await window.ethereum.request({\n              method: \"eth_getTransactionReceipt\",\n              params: [txHash]\n            });\n          }\n        }\n\n        window.location.reload(); // setTokenActionMessage(\n        //   \"Congratulations! Your NFT is on its way to you.\"\n        // );\n      } else {\n        // setTokenActionMessage(\n        //   \"An error occured while crafting transactions, try refreshing the page.\"\n        // );\n        alert(\"hello error\");\n      }\n    }\n  };\n\n  const stopBid = async () => {\n    const response = await axios.post(`http://localhost:8080/stopAuction`, {\n      msgsender: walletAddress,\n      tokenId: tokenId\n    });\n\n    if (response.status == 200) {\n      for (var i = 0; i < response.data.signRequired.length; i++) {\n        // setTokenActionMessage(\n        //     \"Sending transaction#\" + (i + 1) + \" to the network...\"\n        // );\n        var params = [{ ...response.data.signRequired[i]\n        }];\n        await window.ethereum.request({\n          method: \"eth_sendTransaction\",\n          params\n        });\n      } // setTokenActionMessage(\n      //     \"Auction stop request sent to network, please wait for transaction to be mined.\"\n      // );\n\n    } else {// setTokenActionMessage(\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\n      // );\n    }\n  };\n\n  let buttonHandler = () => {\n    if (tokenData.owner != walletAddress) {\n      if (tokenData.tknBid) {\n        setShowPlaceBid(true);\n      } else {\n        buyNFT();\n      }\n    } else {\n      if (tokenData.tknBid) {\n        stopBid();\n      } else {\n        setShowPriceUpdate(true);\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (!window.ethereum) {\n      alert(\"Intall Metamask Wallet\");\n    }\n\n    const address = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n    setWalletAddress(address[0]);\n    const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    console.log(uri.data.result);\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    const owner = await axios.get(`http://localhost:8080/ownerOf`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    const uriResponse = await axios.get(uri.data.result);\n    var auctioned = null;\n\n    try {\n      auctioned = await axios.get(`http://localhost:8080/auctionInfo`, {\n        params: {\n          tokenId: tokenId\n        }\n      });\n    } catch (err) {}\n\n    if (auctioned) {\n      setTokenData({ ...auctioned.data.result,\n        ...uriResponse.data,\n        price: price.data.result,\n        owner: owner.data.result.toLowerCase()\n      });\n    } else {\n      setTokenData({ ...uriResponse.data,\n        price: price.data.result,\n        owner: owner.data.result.toLowerCase()\n      });\n    }\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vidSection\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video\",\n        src: tokenData.media,\n        autoPlay: true,\n        muted: true,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameNdPrice\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://picsum.photos/50/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tenz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: tokenData.tknBid ? \"Current Bid:\" : \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tokenData.tknBid ? tokenData.tknBid / Math.pow(10, 18) : tokenData.price / Math.pow(10, 18), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"orangered\",\n              marginRight: \"15px\"\n            },\n            children: \"Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailNdButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [tokenData.title, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", tokenData.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [tokenData.owner != walletAddress ? tokenData.tknBid ? /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Place Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: buyNFT,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this) : tokenData.tknBid && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Stop & Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }, this), tokenData.owner == walletAddress && !tokenData.tknBid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowStartAuction(true),\n            children: \"Put on Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buying History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Details, \"+blbAP0PnEO7YE7pUUPPqBA6JLA=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/DetailsPage/Details.js"],"names":["useState","useEffect","React","axios","useParams","History","ownerDocument","Details","tokenId","walletAddress","setWalletAddress","tokenData","setTokenData","showPlaceBid","setShowPlaceBid","showPriceUpdate","setShowPriceUpdate","showStartAuction","setShowStartAuction","buyNFT","address","window","ethereum","selectedAddress","balance","get","params","price","response","post","msgsender","tx","data","signRequired","status","txObj","txHash","request","method","txReceipt","location","reload","alert","stopBid","i","length","buttonHandler","owner","tknBid","on","uri","console","log","result","uriResponse","auctioned","err","toLowerCase","media","Math","pow","color","marginRight","title","description"],"mappings":"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","sourcesContent":["import { useState, useEffect, React } from \"react\";\r\nimport \"./details.css\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport History from \"../HIstorySection/History\";\r\nimport { ownerDocument } from \"@material-ui/core\";\r\n\r\nconst Details = () => {\r\n  let { tokenId } = useParams();\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [tokenData, setTokenData] = useState({});\r\n  const [showPlaceBid, setShowPlaceBid] = useState(false);\r\n  const [showPriceUpdate, setShowPriceUpdate] = useState(false);\r\n  const [showStartAuction, setShowStartAuction] = useState(false);\r\n\r\n  const buyNFT = async () => {\r\n    let address = await window.ethereum.selectedAddress;\r\n    const balance = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\r\n      params: { address: address },\r\n    });\r\n\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    if (balance >= price) {\r\n      const response = await axios.post(`http://localhost:8080/buyNFT`, {\r\n        msgsender: walletAddress,\r\n        price: tokenData.price,\r\n        tokenId: tokenId,\r\n      });\r\n\r\n      const tx = response.data.signRequired;\r\n\r\n      if (response.status == 200) {\r\n        for (let txObj of tx) {\r\n          var params = [txObj];\r\n\r\n          const txHash = await window.ethereum.request({\r\n            method: \"eth_sendTransaction\",\r\n            params,\r\n          });\r\n\r\n          let txReceipt = null;\r\n          while(txReceipt == null)\r\n          {\r\n              txReceipt = await window.ethereum.request({\r\n              method: \"eth_getTransactionReceipt\",\r\n              params:[txHash],\r\n            });\r\n          }\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n        // setTokenActionMessage(\r\n        //   \"Congratulations! Your NFT is on its way to you.\"\r\n        // );\r\n      } else {\r\n        // setTokenActionMessage(\r\n        //   \"An error occured while crafting transactions, try refreshing the page.\"\r\n        // );\r\n        alert(\"hello error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopBid = async () => {\r\n    const response = await axios.post(`http://localhost:8080/stopAuction`, {\r\n      msgsender: walletAddress,\r\n      tokenId: tokenId,\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      for (var i = 0; i < response.data.signRequired.length; i++) {\r\n        // setTokenActionMessage(\r\n        //     \"Sending transaction#\" + (i + 1) + \" to the network...\"\r\n        // );\r\n        var params = [\r\n          {\r\n            ...response.data.signRequired[i],\r\n          },\r\n        ];\r\n        await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params,\r\n        });\r\n      }\r\n      // setTokenActionMessage(\r\n      //     \"Auction stop request sent to network, please wait for transaction to be mined.\"\r\n      // );\r\n    } else {\r\n      // setTokenActionMessage(\r\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  let buttonHandler = () => {\r\n    if (tokenData.owner != walletAddress) {\r\n      if (tokenData.tknBid) {\r\n        setShowPlaceBid(true);\r\n      } else {\r\n        buyNFT();\r\n      }\r\n    } else {\r\n      if (tokenData.tknBid) {\r\n        stopBid();\r\n      } else {\r\n        setShowPriceUpdate(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!window.ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n\r\n    const address = await window.ethereum.request({ method: \"eth_accounts\" });\r\n\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address[0]);\r\n\r\n    const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    console.log(uri.data.result);\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n\r\n    const owner = await axios.get(`http://localhost:8080/ownerOf`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    \r\n\r\n    const uriResponse = await axios.get(uri.data.result);\r\n\r\n\r\n    var auctioned = null;\r\n    try {\r\n      auctioned = await axios.get(`http://localhost:8080/auctionInfo`, {\r\n        params: { tokenId: tokenId },\r\n      });\r\n    } catch (err) {}\r\n\r\n    if (auctioned) {\r\n      setTokenData({\r\n        ...auctioned.data.result,\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.toLowerCase()\r\n      });\r\n    } else {\r\n      setTokenData({\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.toLowerCase()\r\n      });\r\n    }\r\n  }, [walletAddress]);\r\n \r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"vidSection\">\r\n        <video className=\"video\" src={tokenData.media} autoPlay muted loop />\r\n      </div>\r\n\r\n      <div className=\"nameNdPrice\">\r\n        <div className=\"name\">\r\n          <img src=\"https://picsum.photos/50/50\" />\r\n          <h2>Tenz</h2>\r\n        </div>\r\n\r\n        <div className=\"price\">\r\n          <h3>{tokenData.tknBid ? \"Current Bid:\" : \"Current Price:\"}</h3>\r\n          <p>\r\n            {tokenData.tknBid\r\n              ? tokenData.tknBid / Math.pow(10, 18)\r\n              : tokenData.price / Math.pow(10, 18)}\r\n\r\n            <span style={{ color: \"orangered\", marginRight: \"15px\" }}>\r\n              Tokens\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"detailNdButton\">\r\n        <div className=\"details\">\r\n          <h1>{tokenData.title}:</h1>\r\n          <p> {tokenData.description}</p>\r\n        </div>\r\n\r\n        <div className=\"button\">\r\n          {/* <button onClick={() => buttonHandler()}>\r\n            {tokenData.creator != walletAddress\r\n              ? tokenData.tknBid\r\n                ? \"Place Bid\"\r\n                : \"Buy\"\r\n              : tokenData.tknBid && \"Stop & Transfer\"}\r\n          </button> */}\r\n          {tokenData.owner != walletAddress ? (\r\n            tokenData.tknBid ? (\r\n              <button>Place Bid</button>\r\n            ) : (\r\n              <button onClick={buyNFT}>Buy</button>\r\n            )\r\n          ) : (\r\n            tokenData.tknBid && <button>Stop & Transfer</button>\r\n          )}\r\n\r\n          {\r\n          tokenData.owner == walletAddress && !tokenData.tknBid ? (\r\n            <>\r\n            <button onClick={() => setShowStartAuction(true)}>\r\n              Put on Auction\r\n            </button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <h2>Buying History:</h2>\r\n      </div>\r\n\r\n\r\n            <History/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}