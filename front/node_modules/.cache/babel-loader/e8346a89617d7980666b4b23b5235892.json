{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project201\\\\FYP_NftMarketplace\\\\front\\\\src\\\\Components\\\\DetailsPage\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport \"./details.css\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport History from \"../HIstorySection/History\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"column\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  height: 300,\n  bgcolor: \"black\",\n  border: \"1px solid orangered\",\n  boxShadow: 24,\n  p: 4,\n  color: \"white\",\n  borderRadius: \"12px\"\n};\nconst buttonStyle = {\n  position: \"relative\",\n  border: \"4px solid transparent\",\n  borderRadius: \"10px\",\n  background: \"black\",\n  backgroundClip: \"paddingBox\",\n  width: \"140px\",\n  height: \"45px\",\n  color: \"white\",\n  fontSize: \"20px\",\n  fontWeight: \"bold\",\n  border: \"1px solid orangered\",\n  cursor: \"pointer\",\n  boxShadow: \"0px 4px 10px rgb(46, 118, 226, 0.4)\",\n  marginTop: \"4px\"\n};\n\nconst Details = () => {\n  _s();\n\n  let {\n    tokenId\n  } = useParams();\n  const [walletAddress, setWalletAddress] = useState(\"\");\n  const [tokenData, setTokenData] = useState({});\n  const [bidModalTrue, setBidModalTrue] = useState(false);\n  const [auctionModalTrue, setAuctionModalTrue] = useState(false); // Putting on Auction states set from Modal\n\n  const [startAuctionPrice, setStartAuctionPrice] = useState(\"\");\n  const [auctionEndDate, setAuctionEndDate] = useState();\n  const [bidprice, setBidPrice] = useState(\"\");\n  const [startAuctionMessage, setStartAuctionMessage] = useState(\"\");\n  const [startAuctionMessageState, setStartAuctionMessageState] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const buyNFT = async () => {\n    let address = await window.ethereum.selectedAddress;\n    const balance = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\n      params: {\n        address: address\n      }\n    });\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n\n    if (balance >= price) {\n      const response = await axios.post(`http://localhost:8080/buyNFT`, {\n        msgsender: walletAddress,\n        price: tokenData.price,\n        tokenId: tokenId\n      });\n      const tx = response.data.signRequired;\n\n      if (response.status == 200) {\n        for (let txObj of tx) {\n          var params = [txObj];\n          const txHash = await window.ethereum.request({\n            method: \"eth_sendTransaction\",\n            params\n          });\n          let txReceipt = null;\n\n          while (txReceipt == null) {\n            txReceipt = await window.ethereum.request({\n              method: \"eth_getTransactionReceipt\",\n              params: [txHash]\n            });\n          }\n        }\n\n        window.location.reload(); // setTokenActionMessage(\n        //   \"Congratulations! Your NFT is on its way to you.\"\n        // );\n      } else {\n        // setTokenActionMessage(\n        //   \"An error occured while crafting transactions, try refreshing the page.\"\n        // );\n        alert(\"hello error\");\n      }\n    }\n  };\n\n  let startAuction = async () => {\n    if (startAuctionPrice == \"\" || startAuctionPrice < 0 || startAuctionPrice < tokenData.price / Math.pow(10, 18)) {\n      alert(\"Price must not be empty, 0 or less than prev price\");\n      return;\n    }\n\n    var selectedTimestamp = new Date(auctionEndDate).getTime() / 1000;\n\n    if (auctionEndDate == \"\" || selectedTimestamp < Date.now() / 1000) {\n      alert(\"Error: Please enter a valid date in future.\");\n      return;\n    }\n\n    const response = await axios.post(`http://localhost:8080/startAuction`, {\n      tokenId: tokenId,\n      startPrice: startAuctionPrice,\n      endTime: selectedTimestamp,\n      tokenOwner: walletAddress\n    });\n\n    if (response.status == 200) {\n      // setStartAuctionMessage(\"Sending transaction to the network...\");\n      // setStartAuctionMessageState(\"info\");\n      var params = [{ ...response.data.signRequired\n      }];\n      await window.ethereum.request({\n        method: \"eth_sendTransaction\",\n        params\n      }); // setStartAuctionMessage(\n      //     \"Auction start request sent, please wait for transaction to be mined.\"\n      // );\n      // setStartAuctionMessageState(\"success\");\n    } else {// setStartAuctionMessage(\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\n      // );\n      // setStartAuctionMessageState(\"error\");\n    }\n  };\n\n  const stopAuction = async () => {\n    const response = await axios.post(`http://localhost:8080/stopAuction`, {\n      msgsender: walletAddress,\n      tokenId: tokenId\n    });\n\n    if (response.status == 200) {\n      for (var i = 0; i < response.data.signRequired.length; i++) {\n        // setTokenActionMessage(\n        //     \"Sending transaction#\" + (i + 1) + \" to the network...\"\n        // );\n        var params = [{ ...response.data.signRequired[i]\n        }];\n        await window.ethereum.request({\n          method: \"eth_sendTransaction\",\n          params\n        });\n        window.location.reload();\n      } // setTokenActionMessage(\n      //     \"Auction stop request sent to network, please wait for transaction to be mined.\"\n      // );\n\n    } else {// setTokenActionMessage(\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\n      // );\n    }\n  };\n\n  let updateBid = async () => {\n    // setPriceUpdateMessage(\"Contacting gateway to craft transaction...\");\n    // setPriceUpdateMessageState(\"info\");\n    if (bidprice == \"\" || bidprice < 0 || bidprice < tokenData.price) {\n      // setPriceUpdateMessage(\"Error: Please enter a valid price.\");\n      // setPriceUpdateMessageState(\"error\");\n      alert(\"Bid price shouldn't be empty, zero or less than previous bid\");\n      return;\n    }\n\n    const response = await axios.post(`http://localhost:8080/updateAuctionPrice`, {\n      msgsender: walletAddress,\n      newPrice: bidprice,\n      tokenId: tokenId\n    });\n    const tx = response.data.signRequired;\n\n    if (response.status == 200) {\n      // setPriceUpdateMessage(\"Sending transaction to the network...\");\n      // setPriceUpdateMessageState(\"info\");\n      for (let txObj of tx) {\n        var params = [txObj];\n        const txHash = await window.ethereum.request({\n          method: \"eth_sendTransaction\",\n          params\n        });\n        let txReceipt = null;\n\n        while (txReceipt == null) {\n          txReceipt = await window.ethereum.request({\n            method: \"eth_getTransactionReceipt\",\n            params: [txHash]\n          });\n        }\n      }\n\n      window.location.reload(); // setPriceUpdateMessage(\n      //     \"Price update request sent, please wait for transaction to be mined.\"\n      // );\n      // setPriceUpdateMessageState(\"success\");\n    } else {// setPriceUpdateMessage(\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\n      // );\n      // setPriceUpdateMessageState(\"error\");\n    }\n  };\n\n  let buttonHandler = () => {\n    if (tokenData.owner != walletAddress) {\n      setBidModalTrue(true);\n      handleOpen();\n    } else if (tokenData.owner == walletAddress && !tokenData.tknBid) {\n      setAuctionModalTrue(true);\n      handleOpen();\n    }\n  };\n\n  useEffect(async () => {\n    if (!window.ethereum) {\n      alert(\"Intall Metamask Wallet\");\n    }\n\n    const address = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n    window.ethereum.on(\"accountsChanged\", () => {\n      window.location.reload();\n    });\n    setWalletAddress(address[0]);\n    const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    const owner = await axios.get(`http://localhost:8080/ownerOf`, {\n      params: {\n        tokenId: tokenId\n      }\n    });\n    const uriResponse = await axios.get(uri.data.result);\n    var auctioned = null;\n\n    try {\n      auctioned = await axios.get(`http://localhost:8080/auctionInfo`, {\n        params: {\n          tokenId: tokenId\n        }\n      });\n    } catch (err) {}\n\n    if (auctioned) {\n      setTokenData({ ...auctioned.data.result,\n        ...uriResponse.data,\n        price: price.data.result,\n        owner: owner.data.result.toLowerCase()\n      });\n    } else {\n      setTokenData({ ...uriResponse.data,\n        price: price.data.result,\n        owner: owner.data.result.toLowerCase()\n      });\n    }\n  }, [walletAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vidSection\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        className: \"video\",\n        src: tokenData.media,\n        autoPlay: true,\n        muted: true,\n        loop: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nameNdPrice\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://picsum.photos/50/50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tenz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: tokenData.tknBid ? \"Current Bid:\" : \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [tokenData.tknBid ? tokenData.tknBid / Math.pow(10, 18) : tokenData.price / Math.pow(10, 18), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"orangered\",\n              marginRight: \"15px\"\n            },\n            children: \"Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailNdButton\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [tokenData.title, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", tokenData.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        children: [tokenData.owner != walletAddress ? tokenData.tknBid ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: buttonHandler,\n          children: \"Place Bid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: buyNFT,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this) : tokenData.tknBid && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopAuction,\n          children: \"Stop & Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this), tokenData.owner == walletAddress && !tokenData.tknBid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: buttonHandler,\n            children: \"Put on Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Buying History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [bidModalTrue && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter Your Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter Bid\",\n            onChange: e => setBidPrice(e.target.value),\n            style: {\n              width: \"255px\",\n              marginTop: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: buttonStyle,\n            onClick: updateBid,\n            children: \"Bid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), auctionModalTrue && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter intial price for Auction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Enter Auction Price\",\n            onChange: e => setStartAuctionPrice(e.target.value),\n            style: {\n              width: \"255px\",\n              marginTop: \"25px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            onChange: e => setAuctionEndDate(e.target.value),\n            min: Date.now(),\n            style: {\n              width: \"255px\",\n              marginTop: \"5px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: buttonStyle,\n            onClick: startAuction,\n            children: \"Auction!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Details, \"793/ltGT/PAY0o2kbxMwq/mh12Q=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project201/FYP_NftMarketplace/front/src/Components/DetailsPage/Details.js"],"names":["useState","useEffect","React","axios","useParams","History","Box","Modal","style","position","top","left","display","justifyContent","alignItems","flexDirection","transform","width","height","bgcolor","border","boxShadow","p","color","borderRadius","buttonStyle","background","backgroundClip","fontSize","fontWeight","cursor","marginTop","Details","tokenId","walletAddress","setWalletAddress","tokenData","setTokenData","bidModalTrue","setBidModalTrue","auctionModalTrue","setAuctionModalTrue","startAuctionPrice","setStartAuctionPrice","auctionEndDate","setAuctionEndDate","bidprice","setBidPrice","startAuctionMessage","setStartAuctionMessage","startAuctionMessageState","setStartAuctionMessageState","open","setOpen","handleOpen","handleClose","buyNFT","address","window","ethereum","selectedAddress","balance","get","params","price","response","post","msgsender","tx","data","signRequired","status","txObj","txHash","request","method","txReceipt","location","reload","alert","startAuction","Math","pow","selectedTimestamp","Date","getTime","now","startPrice","endTime","tokenOwner","stopAuction","i","length","updateBid","newPrice","buttonHandler","owner","tknBid","on","uri","uriResponse","result","auctioned","err","toLowerCase","media","marginRight","title","description","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, React } from \"react\";\r\nimport \"./details.css\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport History from \"../HIstorySection/History\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 300,\r\n  height: 300,\r\n  bgcolor: \"black\",\r\n  border: \"1px solid orangered\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  color: \"white\",\r\n  borderRadius: \"12px\",\r\n};\r\n\r\nconst buttonStyle = {\r\n  position: \"relative\",\r\n  border: \"4px solid transparent\",\r\n  borderRadius: \"10px\",\r\n  background: \"black\",\r\n  backgroundClip: \"paddingBox\",\r\n  width: \"140px\",\r\n  height: \"45px\",\r\n  color: \"white\",\r\n  fontSize: \"20px\",\r\n  fontWeight: \"bold\",\r\n  border: \"1px solid orangered\",\r\n  cursor: \"pointer\",\r\n  boxShadow: \"0px 4px 10px rgb(46, 118, 226, 0.4)\",\r\n  marginTop: \"4px\",\r\n};\r\n\r\nconst Details = () => {\r\n  let { tokenId } = useParams();\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [tokenData, setTokenData] = useState({});\r\n\r\n  const [bidModalTrue, setBidModalTrue] = useState(false);\r\n  const [auctionModalTrue, setAuctionModalTrue] = useState(false);\r\n\r\n  // Putting on Auction states set from Modal\r\n  const [startAuctionPrice, setStartAuctionPrice] = useState(\"\");\r\n  const [auctionEndDate, setAuctionEndDate] = useState();\r\n  const [bidprice, setBidPrice] = useState(\"\");\r\n\r\n  const [startAuctionMessage, setStartAuctionMessage] = useState(\"\");\r\n  const [startAuctionMessageState, setStartAuctionMessageState] = useState(\"\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const buyNFT = async () => {\r\n    let address = await window.ethereum.selectedAddress;\r\n    const balance = await axios.get(`http://localhost:8080/tokenBalanceOf`, {\r\n      params: { address: address },\r\n    });\r\n\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    if (balance >= price) {\r\n      const response = await axios.post(`http://localhost:8080/buyNFT`, {\r\n        msgsender: walletAddress,\r\n        price: tokenData.price,\r\n        tokenId: tokenId,\r\n      });\r\n\r\n      const tx = response.data.signRequired;\r\n\r\n      if (response.status == 200) {\r\n        for (let txObj of tx) {\r\n          var params = [txObj];\r\n\r\n          const txHash = await window.ethereum.request({\r\n            method: \"eth_sendTransaction\",\r\n            params,\r\n          });\r\n\r\n          let txReceipt = null;\r\n          while (txReceipt == null) {\r\n            txReceipt = await window.ethereum.request({\r\n              method: \"eth_getTransactionReceipt\",\r\n              params: [txHash],\r\n            });\r\n          }\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n        // setTokenActionMessage(\r\n        //   \"Congratulations! Your NFT is on its way to you.\"\r\n        // );\r\n      } else {\r\n        // setTokenActionMessage(\r\n        //   \"An error occured while crafting transactions, try refreshing the page.\"\r\n        // );\r\n        alert(\"hello error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  let startAuction = async () => {\r\n    if (\r\n      startAuctionPrice == \"\" ||\r\n      startAuctionPrice < 0 ||\r\n      startAuctionPrice < tokenData.price / Math.pow(10, 18)\r\n    ) {\r\n      alert(\"Price must not be empty, 0 or less than prev price\");\r\n      return;\r\n    }\r\n    var selectedTimestamp = new Date(auctionEndDate).getTime() / 1000;\r\n    if (auctionEndDate == \"\" || selectedTimestamp < Date.now() / 1000) {\r\n      alert(\"Error: Please enter a valid date in future.\");\r\n      return;\r\n    }\r\n    const response = await axios.post(`http://localhost:8080/startAuction`, {\r\n      tokenId: tokenId,\r\n      startPrice: startAuctionPrice,\r\n      endTime: selectedTimestamp,\r\n      tokenOwner: walletAddress,\r\n    });\r\n    if (response.status == 200) {\r\n      // setStartAuctionMessage(\"Sending transaction to the network...\");\r\n      // setStartAuctionMessageState(\"info\");\r\n      var params = [\r\n        {\r\n          ...response.data.signRequired,\r\n        },\r\n      ];\r\n      await window.ethereum.request({\r\n        method: \"eth_sendTransaction\",\r\n        params,\r\n      });\r\n      // setStartAuctionMessage(\r\n      //     \"Auction start request sent, please wait for transaction to be mined.\"\r\n      // );\r\n      // setStartAuctionMessageState(\"success\");\r\n    } else {\r\n      // setStartAuctionMessage(\r\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\r\n      // );\r\n      // setStartAuctionMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  const stopAuction = async () => {\r\n    const response = await axios.post(`http://localhost:8080/stopAuction`, {\r\n      msgsender: walletAddress,\r\n      tokenId: tokenId,\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      for (var i = 0; i < response.data.signRequired.length; i++) {\r\n        // setTokenActionMessage(\r\n        //     \"Sending transaction#\" + (i + 1) + \" to the network...\"\r\n        // );\r\n        var params = [\r\n          {\r\n            ...response.data.signRequired[i],\r\n          },\r\n        ];\r\n        await window.ethereum.request({\r\n          method: \"eth_sendTransaction\",\r\n          params,\r\n        });\r\n\r\n        window.location.reload();\r\n      }\r\n      // setTokenActionMessage(\r\n      //     \"Auction stop request sent to network, please wait for transaction to be mined.\"\r\n      // );\r\n    } else {\r\n      // setTokenActionMessage(\r\n      //     \"An error occured while crafting transactions, try refreshing the page.\"\r\n      // );\r\n    }\r\n  };\r\n\r\n  let updateBid = async () => {\r\n    // setPriceUpdateMessage(\"Contacting gateway to craft transaction...\");\r\n    // setPriceUpdateMessageState(\"info\");\r\n    \r\n    if (bidprice == \"\" || bidprice < 0 || bidprice < tokenData.price) {\r\n        // setPriceUpdateMessage(\"Error: Please enter a valid price.\");\r\n        // setPriceUpdateMessageState(\"error\");\r\n\r\n        alert(\"Bid price shouldn't be empty, zero or less than previous bid\");\r\n\r\n        return;\r\n    }\r\n    const response = await axios.post(\r\n        `http://localhost:8080/updateAuctionPrice`,\r\n        {\r\n            msgsender: walletAddress,\r\n            newPrice: bidprice,\r\n            tokenId: tokenId\r\n        }\r\n    );\r\n    const tx = response.data.signRequired;\r\n    \r\n    if (response.status == 200) {\r\n        // setPriceUpdateMessage(\"Sending transaction to the network...\");\r\n        // setPriceUpdateMessageState(\"info\");\r\n        for (let txObj of tx) {\r\n          var params = [txObj];\r\n\r\n          const txHash = await window.ethereum.request({\r\n            method: \"eth_sendTransaction\",\r\n            params,\r\n          });\r\n\r\n          let txReceipt = null;\r\n          while (txReceipt == null) {\r\n            txReceipt = await window.ethereum.request({\r\n              method: \"eth_getTransactionReceipt\",\r\n              params: [txHash],\r\n            });\r\n          }\r\n        }\r\n\r\n        window.location.reload();\r\n\r\n\r\n\r\n\r\n        // setPriceUpdateMessage(\r\n        //     \"Price update request sent, please wait for transaction to be mined.\"\r\n        // );\r\n        // setPriceUpdateMessageState(\"success\");\r\n    } else {\r\n        // setPriceUpdateMessage(\r\n        //     \"An error occured while crafting transactions, try refreshing the page.\"\r\n        // );\r\n        // setPriceUpdateMessageState(\"error\");\r\n    }\r\n  };\r\n\r\n  let buttonHandler = () => {\r\n    if (tokenData.owner != walletAddress) {\r\n      setBidModalTrue(true);\r\n      handleOpen();\r\n    } else if (tokenData.owner == walletAddress && !tokenData.tknBid) {\r\n      setAuctionModalTrue(true);\r\n      handleOpen();\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!window.ethereum) {\r\n      alert(\"Intall Metamask Wallet\");\r\n    }\r\n\r\n    const address = await window.ethereum.request({ method: \"eth_accounts\" });\r\n\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n    setWalletAddress(address[0]);\r\n\r\n    const uri = await axios.get(`http://localhost:8080/getTokenURI`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n    const price = await axios.get(`http://localhost:8080/getTokenPrice`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    const owner = await axios.get(`http://localhost:8080/ownerOf`, {\r\n      params: { tokenId: tokenId },\r\n    });\r\n\r\n    const uriResponse = await axios.get(uri.data.result);\r\n\r\n    var auctioned = null;\r\n    try {\r\n      auctioned = await axios.get(`http://localhost:8080/auctionInfo`, {\r\n        params: { tokenId: tokenId },\r\n      });\r\n    } catch (err) {}\r\n\r\n    if (auctioned) {\r\n      setTokenData({\r\n        ...auctioned.data.result,\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.toLowerCase(),\r\n      });\r\n    } else {\r\n      setTokenData({\r\n        ...uriResponse.data,\r\n        price: price.data.result,\r\n        owner: owner.data.result.toLowerCase(),\r\n      });\r\n    }\r\n  }, [walletAddress]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"vidSection\">\r\n        <video className=\"video\" src={tokenData.media} autoPlay muted loop />\r\n      </div>\r\n\r\n      <div className=\"nameNdPrice\">\r\n        <div className=\"name\">\r\n          <img src=\"https://picsum.photos/50/50\" />\r\n          <h2>Tenz</h2>\r\n        </div>\r\n\r\n        <div className=\"price\">\r\n          <h3>{tokenData.tknBid ? \"Current Bid:\" : \"Current Price:\"}</h3>\r\n          <p>\r\n            {tokenData.tknBid\r\n              ? tokenData.tknBid / Math.pow(10, 18)\r\n              : tokenData.price / Math.pow(10, 18)}\r\n\r\n            <span style={{ color: \"orangered\", marginRight: \"15px\" }}>\r\n              Tokens\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"detailNdButton\">\r\n        <div className=\"details\">\r\n          <h1>{tokenData.title}:</h1>\r\n          <p> {tokenData.description}</p>\r\n        </div>\r\n\r\n        <div className=\"button\">\r\n          {tokenData.owner != walletAddress ? (\r\n            tokenData.tknBid ? (\r\n              <button onClick={buttonHandler}>Place Bid</button>\r\n            ) : (\r\n              <button onClick={buyNFT}>Buy</button>\r\n            )\r\n          ) : (\r\n            tokenData.tknBid && (\r\n              <button onClick={stopAuction}>Stop & Transfer</button>\r\n            )\r\n          )}\r\n\r\n          {tokenData.owner == walletAddress && !tokenData.tknBid ? (\r\n            <>\r\n              <button onClick={buttonHandler}>Put on Auction</button>\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <h2>Buying History:</h2>\r\n      </div>\r\n      <History />\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          {bidModalTrue && (\r\n            <>\r\n              <h2>Enter Your Bid</h2>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Bid\"\r\n                onChange={(e) => setBidPrice(e.target.value)}\r\n                style={{ width: \"255px\", marginTop: \"25px\" }}\r\n              />\r\n              <button style={buttonStyle} onClick={updateBid}>\r\n                Bid\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {auctionModalTrue && (\r\n            <>\r\n              <h2>Enter intial price for Auction</h2>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Auction Price\"\r\n                onChange={(e) => setStartAuctionPrice(e.target.value)}\r\n                style={{ width: \"255px\", marginTop: \"25px\" }}\r\n              />\r\n              <input\r\n                type=\"datetime-local\"\r\n                onChange={(e) => setAuctionEndDate(e.target.value)}\r\n                min={Date.now()}\r\n                style={{ width: \"255px\", marginTop: \"5px\" }}\r\n              />\r\n              <button style={buttonStyle} onClick={startAuction}>\r\n                Auction!\r\n              </button>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"]},"metadata":{},"sourceType":"module"}