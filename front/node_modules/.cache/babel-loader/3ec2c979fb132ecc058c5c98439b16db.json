{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\FYP Documentation\\\\Project101\\\\front\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [account, setAccount] = useState(null);\n\n  const connectHandler = async () => {\n    if (window.ethereum) {\n      try {\n        const res = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(res[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      setErrorMessage(\"Install MetaMask\");\n    }\n  };\n\n  useEffect(async () => {\n    if (!window.ethereum) {// window.ethereum.on(\"accountsChanged\", accountsChanged);\n    } else {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NFT Marketplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"items\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/\",\n              activeClassName: \"active\",\n              children: [\" \", \"Explore\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/popular\",\n              activeClassName: \"active\",\n              children: [\" \", \"Popular\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/sale\",\n              activeClassName: \"active\",\n              children: [\" \", \"Sale\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/collection\",\n              activeClassName: \"active\",\n              children: [\" \", \"My Collection\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/creators\",\n              activeClassName: \"active\",\n              children: [\" \", \"Creators\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/create\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"200 Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(Navbar, \"86F8VZ8lfjh6tQB+p37fx1M0D7Q=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/FYP Documentation/Project101/front/src/Components/Navbar/Navbar.js"],"names":["React","useEffect","useState","NavLink","Navbar","account","setAccount","connectHandler","window","ethereum","res","request","method","err","console","error","setErrorMessage"],"mappings":"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","sourcesContent":["import {React, useEffect, useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\r\n  const [account, setAccount] = useState(null);\r\n\r\n\r\n  const connectHandler = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const res = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        setAccount(res[0]);\r\n\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    } else {\r\n      setErrorMessage(\"Install MetaMask\");\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(async ()=>{\r\n\r\n\r\n    if (!window.ethereum) {\r\n\r\n      // window.ethereum.on(\"accountsChanged\", accountsChanged);\r\n     }\r\n     else{\r\n    \r\n     }\r\n     \r\n\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n     <div className=\"navbar\">\r\n       <h2>NFT Marketplace</h2>\r\n     <nav>\r\n          <ul className=\"items\">\r\n            <li>\r\n              <NavLink to=\"/\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Explore{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/popular\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Popular{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/sale\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Sale{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/collection\" activeClassName=\"active\">\r\n                {\" \"}\r\n                My Collection{\" \"}\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li>\r\n              <NavLink to=\"/creators\" activeClassName=\"active\">\r\n                {\" \"}\r\n                Creators{\" \"}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n      </nav>\r\n\r\n          <div className=\"buttons\">\r\n          <NavLink to=\"/create\">\r\n              <button><span>Create</span></button>\r\n            </NavLink>\r\n          <button>200 Tokens</button>\r\n          </div>\r\n     </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}